{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\AirlineCompanyAccount\\\\AirlineCompanyPages\\\\ActionOnFlights.js\";\nimport React, { Component } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport FlightList from './FlightList';\nimport AddFlight from './AddFlight';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Swal from \"sweetalert2\";\nimport { history } from '../../../../history';\nimport { logout } from '../../../../actions/user.actions';\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../../TableList.css';\nimport '../../../SecondaryMenu.css';\nimport { BaseUrl } from '../../../../constants/BaseUrl';\n\nclass ActionsOnFlights extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editFlight = flightId => {\n      let token = localStorage.getItem('airlineCompany');\n      axios.get(BaseUrl.url + '/api/AirlineCompanyFacade/getFlightByFlightId/' + flightId, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        // this.props.addCountriesAction(countries);\n        this.setState({\n          isEditFlight: true,\n          isAddFlight: false,\n          flightData: result.data\n        });\n        console.log(\"CountriesData from EditFlight kkkk: \" + JSON.stringify(this.state.countriesData));\n        console.log(\"flightData: \" + JSON.stringify(this.state.flightData));\n      }, error => {\n        this.setState({\n          error\n        });\n\n        if (error.message === 'Request failed with status code 401') {\n          this.props.logout();\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            type: \"error\",\n            text: \"Your token expires, please re-login!\"\n          });\n          history.push('/');\n        }\n      });\n    };\n\n    this.state = {\n      isAddFlight: true,\n      error: null,\n      response: {},\n      flightData: {},\n      isEditFlight: false,\n      countriesData: []\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAllcountries();\n  }\n\n  getAllcountries() {\n    let token = localStorage.getItem('airlineCompany');\n    axios.get(BaseUrl.url + '/api/AirlineCompanyFacade/getAllCountries/', {\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(result => {\n      this.setState({\n        countriesData: result.data\n      });\n      console.log(\"Countries from ActiOnFlight: \" + JSON.stringify(result.data));\n      console.log(\"Countries from FlightList state: \" + JSON.stringify(this.state.countriesData));\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  onFormSubmit(data) {\n    let token = localStorage.getItem('airlineCompany');\n\n    if (this.state.isEditFlight) {\n      axios.put(BaseUrl.url + '/api/AirlineCompanyFacade/updateFlight', data, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        let fdata = JSON.parse(result.config.data);\n\n        if (result.data === `Flight with ID = ${fdata.ID} updated succsesfully`) {\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: result.data,\n            showConfirmButton: true\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            text: result.data\n          });\n        }\n\n        this.setState({\n          response: result,\n          isAddFlight: true,\n          isEditFlight: false\n        });\n      });\n    } else {\n      axios.post(BaseUrl.url + '/api/AirlineCompanyFacade/createFlight', data, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        if (result.data === 'Flight created succsesfully') {\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: result.data,\n            showConfirmButton: true\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            type: \"error\",\n            text: result.data\n          });\n        }\n\n        this.setState({\n          response: result,\n          isAddFlight: true,\n          isEditFlight: false\n        });\n      });\n    }\n  }\n\n  onCreate() {\n    this.setState({\n      isAddFlight: false\n    });\n    this.setState({\n      isEditFlight: false\n    });\n    this.setState({\n      flightData: {}\n    });\n  }\n\n  onDetails(view) {\n    if (view === 'ListView') this.setState({\n      isAddFlight: true\n    });\n    this.setState({\n      isEditFlight: false\n    });\n  }\n\n  render() {\n    let flightForm;\n\n    if (!this.state.isAddFlight || this.state.isEditFlight) {\n      flightForm = React.createElement(AddFlight, {\n        onFormSubmit: this.onFormSubmit,\n        flight: this.state.flightData,\n        countries: this.state.countriesData,\n        ListView: this.onDetails.bind(this, 'ListView'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content1\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"CRUD operation on flights\"), this.state.isAddFlight && React.createElement(Button, {\n      className: \"addBtn\",\n      variant: \"primary\",\n      style: {\n        borderRadius: 0\n      },\n      onClick: () => this.onCreate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Add Flight\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), this.state.isAddFlight && React.createElement(FlightList, {\n      editFlight: this.editFlight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), flightForm));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: bindActionCreators(logout, dispatch) // addCountriesAction: bindActionCreators(addCountriesAction, dispatch)\n\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ActionsOnFlights);","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/AirlineCompanyAccount/AirlineCompanyPages/ActionOnFlights.js"],"names":["React","Component","Container","Button","FlightList","AddFlight","axios","bindActionCreators","connect","Swal","history","logout","BaseUrl","ActionsOnFlights","constructor","props","editFlight","flightId","token","localStorage","getItem","get","url","headers","then","result","setState","isEditFlight","isAddFlight","flightData","data","console","log","JSON","stringify","state","countriesData","error","message","fire","icon","title","type","text","push","response","onFormSubmit","bind","componentDidMount","getAllcountries","put","fdata","parse","config","ID","position","showConfirmButton","post","onCreate","onDetails","view","render","flightForm","width","textAlign","borderRadius","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport FlightList from './FlightList'\r\nimport AddFlight from './AddFlight';\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport Swal from \"sweetalert2\";\r\nimport { history } from '../../../../history';\r\nimport { logout } from '../../../../actions/user.actions';\r\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../TableList.css'\r\nimport '../../../SecondaryMenu.css'\r\nimport { BaseUrl } from '../../../../constants/BaseUrl'\r\n\r\nclass ActionsOnFlights extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isAddFlight: true,\r\n      error: null,\r\n      response: {},\r\n      flightData: {},\r\n      isEditFlight: false,\r\n      countriesData: []\r\n\r\n    }\r\n\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n\r\n  }\r\n  componentDidMount() {\r\n    this.getAllcountries();\r\n  }\r\n\r\n  getAllcountries() {\r\n    let token = localStorage.getItem('airlineCompany');\r\n    axios.get(BaseUrl.url + '/api/AirlineCompanyFacade/getAllCountries/', { headers: { 'Authorization': 'Bearer ' + token } })\r\n      .then((result) => {\r\n        this.setState({\r\n\r\n          countriesData: result.data\r\n\r\n        });\r\n        console.log(\"Countries from ActiOnFlight: \" + JSON.stringify(result.data))\r\n        console.log(\"Countries from FlightList state: \" + JSON.stringify(this.state.countriesData))\r\n      },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      )\r\n  }\r\n  onFormSubmit(data) {\r\n    let token = localStorage.getItem('airlineCompany');\r\n    if (this.state.isEditFlight) {\r\n      axios.put(BaseUrl.url + '/api/AirlineCompanyFacade/updateFlight', data, { headers: { 'Authorization': 'Bearer ' + token } })\r\n        .then(result => {\r\n          let fdata = JSON.parse(result.config.data)\r\n          if (result.data === `Flight with ID = ${fdata.ID} updated succsesfully`) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: result.data,\r\n              showConfirmButton: true\r\n            });\r\n          }\r\n          else {\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              text: result.data\r\n            });\r\n          }\r\n          this.setState({\r\n            response: result,\r\n            isAddFlight: true,\r\n            isEditFlight: false\r\n          })\r\n        });\r\n    } else {\r\n      axios.post(BaseUrl.url + '/api/AirlineCompanyFacade/createFlight', data, { headers: { 'Authorization': 'Bearer ' + token } })\r\n        .then(result => {\r\n          if (result.data === 'Flight created succsesfully') {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: result.data,\r\n              showConfirmButton: true\r\n            });\r\n          }\r\n          else {\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              type: \"error\",\r\n              text: result.data\r\n            });\r\n          }\r\n          this.setState({\r\n            response: result,\r\n            isAddFlight: true,\r\n            isEditFlight: false\r\n          })\r\n        });\r\n    }\r\n  }\r\n\r\n  editFlight = (flightId) => {\r\n\r\n    let token = localStorage.getItem('airlineCompany');\r\n    axios.get(BaseUrl.url + '/api/AirlineCompanyFacade/getFlightByFlightId/' + flightId, { headers: { 'Authorization': 'Bearer ' + token } })\r\n      .then((result) => {\r\n        // this.props.addCountriesAction(countries);\r\n        this.setState({\r\n          isEditFlight: true,\r\n          isAddFlight: false,\r\n          flightData: result.data\r\n        });\r\n        console.log(\"CountriesData from EditFlight kkkk: \" + JSON.stringify(this.state.countriesData))\r\n        console.log(\"flightData: \" + JSON.stringify(this.state.flightData))\r\n      },\r\n        (error) => {\r\n          this.setState({ error });\r\n          if (error.message === 'Request failed with status code 401') {\r\n            this.props.logout();\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              type: \"error\",\r\n              text: \"Your token expires, please re-login!\",\r\n            });\r\n            history.push('/');\r\n          }\r\n        }\r\n      )\r\n\r\n  }\r\n\r\n  onCreate() {\r\n    this.setState({ isAddFlight: false });\r\n    this.setState({ isEditFlight: false });\r\n    this.setState({ flightData: {} });\r\n  }\r\n  onDetails(view) {\r\n    if (view === 'ListView')\r\n      this.setState({ isAddFlight: true });\r\n    this.setState({ isEditFlight: false });\r\n  }\r\n\r\n  render() {\r\n\r\n    let flightForm;\r\n    if (!this.state.isAddFlight || this.state.isEditFlight) {\r\n\r\n      flightForm = <AddFlight onFormSubmit={this.onFormSubmit} flight={this.state.flightData} countries={this.state.countriesData} ListView={this.onDetails.bind(this, 'ListView')} />\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"content1\" style={{width: '100%'}}>\r\n      <Container>\r\n        <h1 style={{ textAlign: 'center' }}>CRUD operation on flights</h1>\r\n\r\n        {this.state.isAddFlight && <Button className=\"addBtn\" variant=\"primary\" style={{ borderRadius: 0 }} onClick={() => this.onCreate()}>Add Flight</Button>}\r\n        <br></br>\r\n        {this.state.isAddFlight && <FlightList editFlight={this.editFlight} />}\r\n        {flightForm}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: bindActionCreators(logout, dispatch)\r\n    // addCountriesAction: bindActionCreators(addCountriesAction, dispatch)\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(ActionsOnFlights);\r\n"]},"metadata":{},"sourceType":"module"}