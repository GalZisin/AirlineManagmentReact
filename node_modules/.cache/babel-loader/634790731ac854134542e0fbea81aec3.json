{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\Administrator\\\\AdminPages\\\\ActionsOnAdmin.js\";\nimport React, { Component } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport AdminList from './AdminList';\nimport AddAdmin from './AddAdmin';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Swal from \"sweetalert2\";\nimport { history } from '../../../../history';\nimport { logout } from '../../../../actions/user.actions';\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BaseUrl } from '../../../../constants/BaseUrl';\n\nclass ActionsOnAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editAdmin = adminId => {\n      let token = localStorage.getItem('admin');\n      axios.post(BaseUrl.url + `/api/AdministratorFacade/getAdministratorById`, {\n        id: adminId\n      }, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        this.setState({\n          isEditAdmin: true,\n          isAddAdmin: false,\n          adminData: result.data\n        });\n      }, error => {\n        this.setState({\n          error\n        });\n\n        if (error.message === 'Request failed with status code 401') {\n          this.props.logout();\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            type: \"error\",\n            text: \"Your token expires, please re-login!\"\n          });\n          history.push('/');\n        }\n      });\n    };\n\n    this.state = {\n      isAddAdmin: true,\n      error: null,\n      response: {},\n      adminData: {},\n      isEditAdmin: false\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onFormSubmit(data) {\n    let token = localStorage.getItem('admin');\n\n    if (this.state.isEditAdmin) {\n      axios.put(BaseUrl.url + '/api/AdministratorFacade/updateadmin', data, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        let adata = JSON.parse(result.config.data);\n\n        if (result.data === `Administrator with ID = ${adata.ID} updated succsesfully`) {\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: result.data,\n            showConfirmButton: true\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            text: result.data\n          });\n        }\n\n        this.setState({\n          response: result,\n          isAddAdmin: true,\n          isEditAdmin: false\n        });\n      });\n    } else {\n      axios.post(BaseUrl.url + '/api/AdministratorFacade/createadmin', data, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        if (result.data === 'Administrator account created succsesfully') {\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: result.data,\n            showConfirmButton: true\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            type: \"error\",\n            text: result.data\n          });\n        }\n\n        this.setState({\n          response: result,\n          isAddAdmin: true,\n          isEditAdmin: false\n        });\n      });\n    }\n  }\n\n  onCreate() {\n    this.setState({\n      isAddAdmin: false\n    });\n    this.setState({\n      isEditAdmin: false\n    });\n    this.setState({\n      adminData: {}\n    });\n  }\n\n  onDetails(view) {\n    if (view === 'ListView') this.setState({\n      isAddAdmin: true\n    });\n    this.setState({\n      isEditAdmin: false\n    });\n  }\n\n  render() {\n    let adminForm;\n\n    if (!this.state.isAddAdmin || this.state.isEditAdmin) {\n      adminForm = React.createElement(AddAdmin, {\n        onFormSubmit: this.onFormSubmit,\n        admin: this.state.adminData,\n        ListView: this.onDetails.bind(this, 'ListView'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"CRUD operation on Admin\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), this.state.isAddAdmin && React.createElement(Button, {\n      className: \"addBtn\",\n      variant: \"primary\",\n      style: {\n        borderRadius: 0\n      },\n      onClick: () => this.onCreate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Add Admin\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), this.state.isAddAdmin && React.createElement(AdminList, {\n      editAdmin: this.editAdmin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), adminForm));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: bindActionCreators(logout, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ActionsOnAdmin);","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/Administrator/AdminPages/ActionsOnAdmin.js"],"names":["React","Component","Container","Button","AdminList","AddAdmin","axios","bindActionCreators","connect","Swal","history","logout","BaseUrl","ActionsOnAdmin","constructor","props","editAdmin","adminId","token","localStorage","getItem","post","url","id","headers","then","result","setState","isEditAdmin","isAddAdmin","adminData","data","error","message","fire","icon","title","type","text","push","state","response","onFormSubmit","bind","put","adata","JSON","parse","config","ID","position","showConfirmButton","onCreate","onDetails","view","render","adminForm","textAlign","borderRadius","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport AdminList from './AdminList'\r\nimport AddAdmin from './AddAdmin';\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport Swal from \"sweetalert2\";\r\nimport { history } from '../../../../history';\r\nimport { logout } from '../../../../actions/user.actions';\r\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { BaseUrl } from '../../../../constants/BaseUrl'\r\n\r\nclass ActionsOnAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isAddAdmin: true,\r\n      error: null,\r\n      response: {},\r\n      adminData: {},\r\n      isEditAdmin: false,\r\n    }\r\n\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n\r\n  }\r\n\r\n  onFormSubmit(data) {\r\n\r\n    let token = localStorage.getItem('admin');\r\n\r\n    if (this.state.isEditAdmin) {\r\n      axios.put(BaseUrl.url + '/api/AdministratorFacade/updateadmin', data, { headers: { 'Authorization': 'Bearer ' + token } })\r\n        .then(result => {\r\n          let adata = JSON.parse(result.config.data)\r\n          if (result.data === `Administrator with ID = ${adata.ID} updated succsesfully`) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: result.data,\r\n              showConfirmButton: true\r\n            });\r\n          }\r\n          else {\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              text: result.data\r\n            });\r\n          }\r\n          this.setState({\r\n            response: result,\r\n            isAddAdmin: true,\r\n            isEditAdmin: false\r\n          })\r\n        });\r\n    } else {\r\n\r\n      axios.post(BaseUrl.url + '/api/AdministratorFacade/createadmin', data, { headers: { 'Authorization': 'Bearer ' + token } })\r\n        .then(result => {\r\n          if (result.data === 'Administrator account created succsesfully') {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: result.data,\r\n              showConfirmButton: true\r\n            });\r\n          }\r\n          else {\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              type: \"error\",\r\n              text: result.data\r\n            });\r\n          }\r\n          this.setState({\r\n            response: result,\r\n            isAddAdmin: true,\r\n            isEditAdmin: false\r\n          })\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  editAdmin = adminId => {\r\n\r\n    let token = localStorage.getItem('admin');\r\n    axios.post(BaseUrl.url + `/api/AdministratorFacade/getAdministratorById`, { id: adminId }, { headers: { 'Authorization': 'Bearer ' + token } })\r\n      .then((result) => {\r\n        this.setState({\r\n          isEditAdmin: true,\r\n          isAddAdmin: false,\r\n          adminData: result.data\r\n        });\r\n      },\r\n        (error) => {\r\n          this.setState({ error });\r\n          if (error.message === 'Request failed with status code 401') {\r\n            this.props.logout();\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              type: \"error\",\r\n              text: \"Your token expires, please re-login!\",\r\n            });\r\n            history.push('/');\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  onCreate() {\r\n    this.setState({ isAddAdmin: false });\r\n    this.setState({ isEditAdmin: false });\r\n    this.setState({ adminData: {} });\r\n  }\r\n  onDetails(view) {\r\n    if (view === 'ListView')\r\n      this.setState({ isAddAdmin: true });\r\n    this.setState({ isEditAdmin: false });\r\n\r\n  }\r\n\r\n  render() {\r\n    let adminForm;\r\n    if (!this.state.isAddAdmin || this.state.isEditAdmin) {\r\n\r\n      adminForm = <AddAdmin onFormSubmit={this.onFormSubmit} admin={this.state.adminData} ListView={this.onDetails.bind(this, 'ListView')} />\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"content1\">\r\n        <Container>\r\n          <h1 style={{ textAlign: 'center' }}>CRUD operation on Admin</h1>\r\n          <hr></hr>\r\n          {this.state.isAddAdmin && <Button className=\"addBtn\" variant=\"primary\" style={{ borderRadius: 0 }} onClick={() => this.onCreate()}>Add Admin</Button>}\r\n          <br></br>\r\n          {this.state.isAddAdmin && <AdminList editAdmin={this.editAdmin} />}\r\n          {adminForm}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: bindActionCreators(logout, dispatch),\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(ActionsOnAdmin);\r\n\r\n"]},"metadata":{},"sourceType":"module"}