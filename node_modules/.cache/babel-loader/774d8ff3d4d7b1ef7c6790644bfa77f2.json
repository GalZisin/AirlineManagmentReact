{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\Authentication\\\\CompanyRegisterModal.js\";\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Fade from 'react-reveal/Fade';\nimport { Alert } from 'reactstrap';\nimport axios from 'axios';\nimport Swal from \"sweetalert2\";\nimport { Button } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { BaseUrl } from '../../../constants/BaseUrl';\n\nclass CompanyRegisterModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.onChangeCountry = selectedCountry => {\n      const {\n        user\n      } = this.state;\n      this.setState({\n        user: { ...user,\n          country: selectedCountry.label\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      const {\n        user\n      } = this.state;\n      this.setState({\n        user: { ...user,\n          [name]: value\n        }\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        submitted: true\n      });\n      const {\n        user\n      } = this.state;\n\n      if (user.companyName && user.username && user.password && user.email && user.country) {\n        this.register(user.companyName, user.username, user.password, user.email, user.country);\n      }\n    };\n\n    this.resetForm = () => {\n      this.setState({ ...this.initialState\n      });\n      console.log(\"initialState\" + JSON.stringify(this.state));\n      this.props.onclosemodal();\n      this.getAllcountries();\n    };\n\n    this.register = (companyName, username, password, email, country) => {\n      console.log(\"data of company: \" + companyName);\n      axios.post(BaseUrl.url + `/api/AnonymousFacade/companyregister`, {\n        companyName: companyName,\n        username: username,\n        password: password,\n        email: email,\n        country: country\n      }).then(res => {\n        if (res.data === 'Your request has been successfully sent') {\n          this.props.onclosemodal();\n          this.resetForm();\n          Swal.fire({\n            position: 'top',\n            icon: 'success',\n            title: res.data,\n            text: 'Your details have been sent to the administrator and are awaiting approval, in addition we will send an email to the address you entered with a reply if your details confirmed.',\n            showConfirmButton: true\n          });\n        }\n      }).catch(error => {\n        console.log(\"REGISTER ERROR: \" + error.message);\n      });\n    };\n\n    this.initialState = {\n      user: {\n        companyName: '',\n        username: '',\n        password: '',\n        email: '',\n        country: ''\n      },\n      countries: [],\n      submitted: false,\n      msg: null,\n      defaultCountry: null\n    };\n    this.state = this.initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAllcountries();\n  }\n\n  getAllcountries() {\n    axios.get(BaseUrl.url + '/api/AnonymousFacade/allCountries/').then(result => {\n      this.setState({\n        countries: result.data\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  Country() {\n    return this.state.countries.map(data => ({\n      label: data.COUNTRY_NAME,\n      value: data.ID\n    }));\n  }\n\n  render() {\n    const {\n      user,\n      msg,\n      submitted\n    } = this.state;\n    const {\n      closeModal,\n      onclosemodal,\n      ...rest\n    } = this.props;\n    return React.createElement(Modal, Object.assign({}, rest, {\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      className: \"myModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Fade, {\n      Top: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      name: \"form\",\n      onReset: this.resetForm,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      variant: \"danger\",\n      style: {\n        float: 'right',\n        borderRadius: '50%'\n      },\n      onClick: this.resetForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Sign Up\"), msg ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, msg) : null, React.createElement(\"div\", {\n      className: 'form-group' + (submitted && !user.companyName ? ' has-error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Company name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"companyName\",\n      value: user.companyName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), submitted && !user.companyName && React.createElement(\"div\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Company name is required\")), React.createElement(\"div\", {\n      className: 'form-group' + (submitted && !user.username ? ' has-error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"username\",\n      value: user.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), submitted && !user.username && React.createElement(\"div\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Username is required\")), React.createElement(\"div\", {\n      className: 'form-group' + (submitted && !user.password ? ' has-error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: user.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), submitted && !user.password && React.createElement(\"div\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Password is required\")), React.createElement(\"div\", {\n      className: 'form-group' + (submitted && !user.email ? ' has-error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"email\",\n      value: user.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), submitted && !user.email && React.createElement(\"div\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"email is required\")), React.createElement(\"div\", {\n      className: 'form-group' + (submitted && !user.country ? ' has-error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Country\"), React.createElement(Select, {\n      options: this.Country(),\n      type: \"text\",\n      onChange: this.onChangeCountry,\n      placeholder: \"Country Name\",\n      defaultValue: this.state.defaultCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), submitted && !user.country && React.createElement(\"div\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"country name is required\")), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Sign Up\")))));\n  }\n\n}\n\nexport default CompanyRegisterModal;","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/Authentication/CompanyRegisterModal.js"],"names":["React","Modal","Fade","Alert","axios","Swal","Button","Select","BaseUrl","CompanyRegisterModal","Component","constructor","props","_isMounted","onChangeCountry","selectedCountry","user","state","setState","country","label","handleChange","event","name","value","target","handleSubmit","preventDefault","submitted","companyName","username","password","email","register","resetForm","initialState","console","log","JSON","stringify","onclosemodal","getAllcountries","post","url","then","res","data","fire","position","icon","title","text","showConfirmButton","catch","error","message","countries","msg","defaultCountry","bind","componentDidMount","get","result","Country","map","COUNTRY_NAME","ID","render","closeModal","rest","float","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { Alert } from 'reactstrap'\r\nimport axios from 'axios';\r\nimport Swal from \"sweetalert2\";\r\nimport { Button } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport { BaseUrl } from '../../../constants/BaseUrl'\r\n\r\nclass CompanyRegisterModal extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props)\r\n        this.initialState = {\r\n            user: {\r\n                companyName: '',\r\n                username: '',\r\n                password: '',\r\n                email: '',\r\n                country: ''\r\n            },\r\n            countries: [],\r\n            submitted: false,\r\n            msg: null,\r\n            defaultCountry: null\r\n        }\r\n        this.state = this.initialState;\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getAllcountries();\r\n    }\r\n    getAllcountries() {\r\n        axios.get(BaseUrl.url + '/api/AnonymousFacade/allCountries/')\r\n            .then((result) => {\r\n                this.setState({\r\n                    countries: result.data\r\n                });\r\n            },\r\n                (error) => {\r\n                    this.setState({ error });\r\n                }\r\n            )\r\n    }\r\n    Country() {\r\n        return (this.state.countries.map(data => ({ label: data.COUNTRY_NAME, value: data.ID })))\r\n    }\r\n\r\n    onChangeCountry = (selectedCountry) => {\r\n        const { user } = this.state;\r\n        this.setState({\r\n            user: {\r\n                ...user,\r\n                country: selectedCountry.label\r\n            }\r\n        })\r\n    };\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        const { user } = this.state;\r\n        this.setState({\r\n            user: {\r\n                ...user,\r\n                [name]: value\r\n            }\r\n        });\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({ submitted: true });\r\n        const { user } = this.state;\r\n        if (user.companyName && user.username && user.password && user.email && user.country) {\r\n            this.register(user.companyName, user.username, user.password, user.email, user.country);\r\n        }\r\n    }\r\n    resetForm = () => {\r\n        this.setState({ ...this.initialState })\r\n        console.log(\"initialState\" + JSON.stringify(this.state))\r\n        this.props.onclosemodal();\r\n        this.getAllcountries();\r\n    }\r\n\r\n    // Register User\r\n    register = (companyName, username, password, email, country) => {\r\n        console.log(\"data of company: \" + companyName)\r\n        axios.post(BaseUrl.url + `/api/AnonymousFacade/companyregister`, { companyName: companyName, username: username, password: password, email: email, country: country })\r\n            .then(res => {\r\n                if (res.data === 'Your request has been successfully sent') {\r\n\r\n                    this.props.onclosemodal();\r\n\r\n                    this.resetForm();\r\n\r\n                    Swal.fire({\r\n                        position: 'top',\r\n                        icon: 'success',\r\n                        title: res.data,\r\n                        text: 'Your details have been sent to the administrator and are awaiting approval, in addition we will send an email to the address you entered with a reply if your details confirmed.',\r\n                        showConfirmButton: true\r\n                    });\r\n                }\r\n            }\r\n\r\n            ).catch(error => {\r\n                console.log(\"REGISTER ERROR: \" + error.message)\r\n            });\r\n    };\r\n    render() {\r\n        const { user, msg, submitted } = this.state\r\n        const { closeModal, onclosemodal, ...rest } = this.props\r\n        return (\r\n            <Modal\r\n                {...rest}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                className=\"myModal\"\r\n            >\r\n                <Modal.Body>\r\n                    <Fade Top>\r\n                        <form name=\"form\" onReset={this.resetForm} onSubmit={this.handleSubmit}>\r\n                            <Button type=\"button\" variant=\"danger\" style={{ float: 'right', borderRadius: '50%' }} onClick={this.resetForm}>X</Button>\r\n                            <h3>Sign Up</h3>\r\n                            {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\r\n                            <div className={'form-group' + (submitted && !user.companyName ? ' has-error' : '')}>\r\n                                <label htmlFor=\"firstName\">Company name</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"companyName\" value={user.companyName} onChange={this.handleChange} />\r\n                                {submitted && !user.companyName &&\r\n                                    <div className=\"help-block\">Company name is required</div>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className={'form-group' + (submitted && !user.username ? ' has-error' : '')}>\r\n                                <label htmlFor=\"username\">Username</label>\r\n                                <input type=\"text\" className=\"form-control\" name=\"username\" value={user.username} onChange={this.handleChange} />\r\n                                {submitted && !user.username &&\r\n                                    <div className=\"help-block\">Username is required</div>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className={'form-group' + (submitted && !user.password ? ' has-error' : '')}>\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" className=\"form-control\" name=\"password\" value={user.password} onChange={this.handleChange} />\r\n                                {submitted && !user.password &&\r\n                                    <div className=\"help-block\">Password is required</div>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className={'form-group' + (submitted && !user.email ? ' has-error' : '')}>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" name=\"email\" value={user.email} onChange={this.handleChange} />\r\n                                {submitted && !user.email &&\r\n                                    <div className=\"help-block\">email is required</div>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className={'form-group' + (submitted && !user.country ? ' has-error' : '')}>\r\n\r\n                                <label htmlFor=\"country\">Country</label>\r\n                                <Select options={this.Country()}\r\n                                    type=\"text\"\r\n                                    onChange={this.onChangeCountry}\r\n                                    placeholder=\"Country Name\"\r\n                                    defaultValue={this.state.defaultCountry}\r\n                                />\r\n                                {submitted && !user.country &&\r\n                                    <div className=\"help-block\">country name is required</div>\r\n                                }\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\r\n\r\n                        </form>\r\n                    </Fade>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\nexport default CompanyRegisterModal;"]},"metadata":{},"sourceType":"module"}