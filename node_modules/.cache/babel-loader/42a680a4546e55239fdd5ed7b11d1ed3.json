{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\Administrator\\\\AdminPages\\\\Inbox.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport { Button, Container, Row, Col, Card } from 'react-bootstrap';\nimport Swal from \"sweetalert2\";\nimport './Inbox.css';\nimport { BaseUrl } from '../../../../constants/BaseUrl';\n\nclass Inbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllcompaniesToApprove = () => {\n      let token = localStorage.getItem('admin');\n      axios.get(BaseUrl.url + '/api/AdministratorFacade/getAllcompaniesToApprove', {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        console.log(\"getAllcompaniesToApprove: \" + JSON.stringify(result));\n\n        if (result.status === 200) {\n          this.setState({\n            companiesData: result.data\n          });\n        }\n      }, error => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.DeclineOrApprove = (isApproved, userName, email, country) => {\n      let swalTitle = '';\n      let confirmButtonText = '';\n\n      if (isApproved === '1') {\n        swalTitle = 'Please confirm your action';\n        confirmButtonText = 'Yes, add it!';\n      } else if (isApproved === '0') {\n        swalTitle = 'Are you sure?';\n        confirmButtonText = 'Yes, delete it!';\n      }\n\n      Swal.fire({\n        title: swalTitle,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: confirmButtonText\n      }).then(result => {\n        if (result.value) {\n          let token = localStorage.getItem('admin');\n          const {\n            companiesData\n          } = this.state;\n          let data = {\n            userName: userName,\n            country: country,\n            email: email,\n            isApproved: isApproved\n          };\n          console.log(\"data company: \" + JSON.stringify(data));\n          axios.post(BaseUrl.url + `/api/AdministratorFacade/acceptOrDeclineCompany`, data, {\n            headers: {\n              'Authorization': 'Bearer ' + token\n            }\n          }).then(res => {\n            if (res.status === 200) {\n              Swal.fire({\n                position: 'center',\n                icon: 'success',\n                title: res.data,\n                showConfirmButton: true\n              });\n            }\n\n            this.setState({\n              companiesData: companiesData.filter(company => company.USER_NAME !== userName)\n            });\n          }).catch(error => {\n            Swal.fire({\n              icon: 'warning',\n              title: \"failed\",\n              text: error\n            });\n          });\n        }\n      });\n    };\n\n    this.state = {\n      companiesData: []\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.getAllcompaniesToApprove();\n  }\n\n  render() {\n    const comopaniesList = this.state.companiesData.length ? this.state.companiesData.map((company, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: {\n          paddingBottom: 20\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"cardStyle1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 10,\n        xs: 12,\n        lg: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"pSize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        md: 6,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Company name:\\xA0\\xA0\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, company.AIRLINE_NAME))), React.createElement(Col, {\n        xs: 12,\n        md: 5,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Username:\\xA0\\xA0\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, company.USER_NAME))), React.createElement(Col, {\n        xs: 12,\n        md: 7,\n        lg: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Password:\\xA0\\xA0\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, company.PASSWORD))), React.createElement(Col, {\n        xs: 12,\n        md: 6,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Email:\\xA0\\xA0\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, company.EMAIL))), React.createElement(Col, {\n        xs: 12,\n        md: 6,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Country name:\\xA0\\xA0\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, company.COUNTRY_NAME))))), React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        xs: 7,\n        lg: {\n          span: 3,\n          offset: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: {\n          span: 4,\n          offset: 0\n        },\n        md: {\n          span: 6,\n          offset: 0\n        },\n        xs: {\n          span: 2,\n          offset: 3\n        },\n        sm: {\n          span: 2,\n          offset: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Button, {\n        lg: {\n          span: 6,\n          offset: 0\n        },\n        style: {\n          marginLeft: 0,\n          marginRight: 5,\n          marginTop: 12,\n          marginBottom: 0\n        },\n        onClick: () => this.DeclineOrApprove('1', company.USER_NAME, company.EMAIL, company.COUNTRY_NAME),\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Accept\")), React.createElement(Col, {\n        md: {\n          span: 4,\n          offset: 0\n        },\n        xs: {\n          span: 2,\n          offset: 3\n        },\n        sm: {\n          span: 2,\n          offset: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          marginLeft: 5,\n          marginRight: 0,\n          marginTop: 12,\n          marginBottom: 0\n        },\n        variant: \"danger\",\n        onClick: () => this.DeclineOrApprove('0', company.USER_NAME, company.EMAIL, company.COUNTRY_NAME),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Decline\"))))))));\n    }) : React.createElement(\"div\", {\n      className: \"cardNoPosts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"No emails to show\");\n    return React.createElement(\"div\", {\n      className: \"content1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        fontWeight: 500,\n        fontSize: 40,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Incoming requests\"), comopaniesList));\n  }\n\n}\n\nexport default Inbox;","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/Administrator/AdminPages/Inbox.js"],"names":["React","Component","axios","Button","Container","Row","Col","Card","Swal","BaseUrl","Inbox","constructor","props","getAllcompaniesToApprove","token","localStorage","getItem","get","url","headers","then","result","console","log","JSON","stringify","status","setState","companiesData","data","error","DeclineOrApprove","isApproved","userName","email","country","swalTitle","confirmButtonText","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","value","state","post","res","position","showConfirmButton","filter","company","USER_NAME","catch","text","componentDidMount","window","scrollTo","render","comopaniesList","length","map","index","paddingBottom","AIRLINE_NAME","PASSWORD","EMAIL","COUNTRY_NAME","span","offset","marginLeft","marginRight","marginTop","marginBottom","fontWeight","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport { Button, Container, Row, Col, Card } from 'react-bootstrap';\r\nimport Swal from \"sweetalert2\";\r\nimport './Inbox.css'\r\nimport { BaseUrl } from '../../../../constants/BaseUrl'\r\n\r\nclass Inbox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            companiesData: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        this.getAllcompaniesToApprove();\r\n    }\r\n    getAllcompaniesToApprove = () => {\r\n        let token = localStorage.getItem('admin');\r\n        axios.get(BaseUrl.url + '/api/AdministratorFacade/getAllcompaniesToApprove', { headers: { 'Authorization': 'Bearer ' + token } })\r\n            .then((result) => {\r\n                console.log(\"getAllcompaniesToApprove: \" + JSON.stringify(result))\r\n                if (result.status === 200) {\r\n                    this.setState({\r\n                        companiesData: result.data\r\n                    });\r\n                }\r\n            }, (error) => {\r\n                this.setState({ error });\r\n            }\r\n            )\r\n    }\r\n\r\n    DeclineOrApprove = (isApproved, userName, email, country) => {\r\n        let swalTitle = '';\r\n        let confirmButtonText = '';\r\n        if (isApproved === '1') {\r\n            swalTitle = 'Please confirm your action';\r\n            confirmButtonText = 'Yes, add it!';\r\n        }\r\n        else if (isApproved === '0') {\r\n            swalTitle = 'Are you sure?';\r\n            confirmButtonText = 'Yes, delete it!';\r\n        }\r\n        Swal.fire({\r\n            title: swalTitle,\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: confirmButtonText\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                let token = localStorage.getItem('admin');\r\n                const { companiesData } = this.state;\r\n                let data = {\r\n                    userName: userName,\r\n                    country: country,\r\n                    email: email,\r\n                    isApproved: isApproved\r\n                }\r\n                console.log(\"data company: \" + JSON.stringify(data))\r\n\r\n                axios.post(BaseUrl.url + `/api/AdministratorFacade/acceptOrDeclineCompany`, data, { headers: { 'Authorization': 'Bearer ' + token } })\r\n                    .then(res => {\r\n                        if (res.status === 200) {\r\n                            Swal.fire({\r\n                                position: 'center',\r\n                                icon: 'success',\r\n                                title: res.data,\r\n                                showConfirmButton: true\r\n                            });\r\n                        }\r\n                        this.setState({\r\n                            companiesData: companiesData.filter(company => company.USER_NAME !== userName)\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            title: \"failed\",\r\n                            text: error\r\n                        });\r\n\r\n                    })\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const comopaniesList = this.state.companiesData.length ? (\r\n            this.state.companiesData.map((company, index) => {\r\n                return (\r\n                    <div>\r\n                        <Container style={{ paddingBottom: 20 }} key={index}>\r\n                            <Card className=\"cardStyle1\">\r\n                                <Row>\r\n                                    <Col md={10} xs={12} lg={9}>\r\n\r\n                                        <Row className=\"pSize\">\r\n                                            <Col xs={12} md={6} lg={4}><label>Company name:&nbsp;&nbsp;<span>{company.AIRLINE_NAME}</span></label></Col>\r\n                                            <Col xs={12} md={5} lg={3}><label>Username:&nbsp;&nbsp;<span>{company.USER_NAME}</span></label></Col>\r\n                                            <Col xs={12} md={7} lg={5}><label>Password:&nbsp;&nbsp;<span>{company.PASSWORD}</span></label></Col>\r\n                                            <Col xs={12} md={6} lg={4}><label>Email:&nbsp;&nbsp;<span>{company.EMAIL}</span></label></Col>\r\n                                            <Col xs={12} md={6} lg={4}><label>Country name:&nbsp;&nbsp;<span>{company.COUNTRY_NAME}</span></label></Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col md={{ span: 6, offset: 3 }} xs={7} lg={{ span: 3, offset: 0 }}>\r\n                                        <Row>\r\n                                            <Col lg={{ span: 4, offset: 0 }} md={{ span: 6, offset: 0 }} xs={{ span: 2, offset: 3 }} sm={{ span: 2, offset: 4 }}>\r\n                                                <Button lg={{ span: 6, offset: 0 }} style={{ marginLeft: 0, marginRight: 5, marginTop: 12, marginBottom: 0 }} onClick={() => this.DeclineOrApprove('1', company.USER_NAME, company.EMAIL, company.COUNTRY_NAME)} variant=\"success\">Accept</Button>\r\n                                            </Col>\r\n                                            <Col md={{ span: 4, offset: 0 }} xs={{ span: 2, offset: 3 }} sm={{ span: 2, offset: 4 }}>\r\n                                                <Button style={{ marginLeft: 5, marginRight: 0, marginTop: 12, marginBottom: 0 }} variant=\"danger\" onClick={() => this.DeclineOrApprove('0', company.USER_NAME, company.EMAIL, company.COUNTRY_NAME)}>Decline</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Container>\r\n                    </div>\r\n\r\n                );\r\n\r\n            })\r\n        ) : (\r\n                <div className=\"cardNoPosts\">No emails to show</div>\r\n            )\r\n        return (\r\n            <div className=\"content1\">\r\n                <Container>\r\n                    <p style={{ fontWeight: 500, fontSize: 40, textAlign: 'center'}}>Incoming requests</p>\r\n                    {comopaniesList}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Inbox;"]},"metadata":{},"sourceType":"module"}