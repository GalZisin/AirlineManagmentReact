{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\PurchchseTicket\\\\AddTickets.js\";\nimport React, { Component } from \"react\"; // import Button from 'react-bootstrap/Button'\n\nimport { Form, Button } from 'react-bootstrap';\nimport './AddTicket.css';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Swal from \"sweetalert2\";\nimport { BaseUrl } from '../../../constants/BaseUrl';\n\nclass AddTickets extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOrderTickets = event => {\n      event.preventDefault();\n      let data = {\n        'tickets': this.state.tickets,\n        'flights': [{\n          'ID': this.state.f1.ID,\n          'DepartureTime': this.state.f1.DEPARTURE_TIME\n        }, {\n          'ID': this.state.f2.ID,\n          'DepartureTime': this.state.f2.DEPARTURE_TIME\n        }],\n        'user': [{\n          'address': this.state.ADDRESS,\n          'phoneNo': this.state.PHONE_NO,\n          'creditCardNumber': this.state.CREDIT_CARD_NUMBER\n        }]\n      };\n      console.log(\"passangers: \" + JSON.stringify(data));\n      let result = false;\n\n      for (let i = 0; i < this.state.tickets.length; i++) {\n        for (let j = i + 1; j < this.state.tickets.length; j++) {\n          if (this.state.tickets[i].firstName === this.state.tickets[j].firstName && this.state.tickets[i].lastName === this.state.tickets[j].lastName) {\n            result = true;\n            break;\n          }\n\n          if (result === true) {\n            break;\n          }\n        }\n      }\n\n      this.setState({\n        inputErrors: result\n      });\n\n      if (!result) {\n        console.log(\"Data to send: \" + JSON.stringify(data));\n        let token = localStorage.getItem('customer');\n        axios.post(BaseUrl.url + '/api/CustomerFacade/purchaseTickets', data, {\n          headers: {\n            'Authorization': 'Bearer ' + token\n          }\n        }).then(result => {\n          console.log(\"purchaseTickets result: \" + JSON.stringify(result));\n\n          if (result.data === 'Tickets ordered succsesfully') {\n            Swal.fire({\n              position: 'center',\n              icon: 'success',\n              title: result.data,\n              showConfirmButton: true\n            });\n          } else {\n            Swal.fire({\n              icon: 'warning',\n              title: \"Oops..\",\n              type: \"error\",\n              text: result.data\n            });\n          }\n        }).catch(error => {\n          console.log(\"error: \" + error);\n        });\n      }\n    };\n\n    this.state = {\n      filterText: \"\",\n      tickets: [],\n      f1: {},\n      f2: {},\n      inputErrors: false,\n      ADDRESS: '',\n      PHONE_NO: '',\n      CREDIT_CARD_NUMBER: ''\n    };\n  }\n\n  componentDidMount() {\n    this.handleAddEvent();\n    this.getFromRedux();\n  }\n\n  getFromRedux() {\n    if (this.props.postsData.posts.length > 0) {\n      this.setState({\n        f1: this.props.postsData.posts[this.props.postId.postId].f1\n      });\n      this.setState({\n        f2: this.props.postsData.posts[this.props.postId.postId].f2\n      });\n    }\n  }\n\n  handleChangeAddress(event) {\n    this.setState({\n      ADDRESS: event.target.value\n    });\n  }\n\n  handleChangePhoneNo(event) {\n    this.setState({\n      PHONE_NO: event.target.value\n    });\n  }\n\n  handleCreditCardNumber(event) {\n    this.setState({\n      CREDIT_CARD_NUMBER: event.target.value\n    });\n  }\n\n  handleUserInput(filterText) {\n    this.setState({\n      filterText: filterText\n    });\n  }\n\n  handleRowDel(ticket) {\n    var index = this.state.tickets.indexOf(ticket);\n    this.state.tickets.splice(index, 1);\n    this.setState(this.state.tickets);\n    this.setState({\n      inputErrors: false\n    });\n  }\n\n  handleAddEvent(evt) {\n    var id = (+new Date() + Math.floor(Math.random() * 999999)).toString(36);\n    var ticket = {\n      id: id,\n      firstName: \"\",\n      lastName: \"\"\n    };\n    this.state.tickets.push(ticket);\n    this.setState(this.state.tickets);\n  }\n\n  handleTicketTable(evt) {\n    var item = {\n      id: evt.target.id,\n      name: evt.target.name,\n      value: evt.target.value\n    };\n    var tickets = this.state.tickets.slice();\n    var newTickets = tickets.map(function (ticket) {\n      for (var key in ticket) {\n        if (key === item.name && ticket.id === item.id) {\n          ticket[key] = item.value;\n        }\n      }\n\n      return ticket;\n    });\n    this.setState({\n      tickets: newTickets\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"addTicketStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addTicketHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        fontSize: 23,\n        color: 'white',\n        paddingTop: 12,\n        paddingBottom: 12,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Complete the details to place your order\")), React.createElement(\"div\", {\n      className: \"AddTicketpadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"step\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"1\"), \"Contact details and payment details\"), React.createElement(Form, {\n      onSubmit: this.handleOrderTickets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"ADDRESS\",\n      defaultValue: this.state.ADDRESS,\n      onChange: this.handleChangeAddress.bind(this),\n      placeholder: \"Address\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"Phone number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Phone number\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"PHONE_NO\",\n      defaultValue: this.state.PHONE_NO,\n      onChange: this.handleChangePhoneNo.bind(this),\n      placeholder: \"Phone number\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"Credit card number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Credit card number\"), React.createElement(Form.Control, {\n      type: \"search\",\n      placeholder: \"xxxx xxxx xxxx xxxx\",\n      name: \"CREDIT_CARD_NUMBER\",\n      defaultValue: this.state.CREDIT_CARD_NUMBER,\n      onChange: this.handleCreditCardNumber.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"step\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"2\"), \"Add passengers names\"), React.createElement(TicketTable, {\n      onTicketTableUpdate: this.handleTicketTable.bind(this),\n      onRowAdd: this.handleAddEvent.bind(this),\n      onRowDel: this.handleRowDel.bind(this),\n      tickets: this.state.tickets,\n      filterText: this.state.filterText,\n      onOrderTickets: this.handleOrderTickets.bind(this),\n      inputErrors: this.state.inputErrors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"mapStateToProps  state Addtickets: \" + JSON.stringify(state));\n  return {\n    postsData: state.postsData,\n    postId: state.postId\n  };\n};\n\nexport default connect(mapStateToProps)(AddTickets);\n\nclass TicketTable extends React.Component {\n  render() {\n    let isNotValid = this.props.inputErrors;\n    var onTicketTableUpdate = this.props.onTicketTableUpdate;\n    var rowDel = this.props.onRowDel;\n    var filterText = this.props.filterText;\n    var ticket = this.props.tickets.map(function (ticket) {\n      // console.log(\"tickets from TicketTable: \" + JSON.stringify(ticket))\n      if (ticket.firstName.indexOf(filterText) === -1) {\n        return '';\n      }\n\n      return React.createElement(TicketRow, {\n        onTicketTableUpdate: onTicketTableUpdate,\n        ticket: ticket,\n        onDelEvent: rowDel.bind(this),\n        key: ticket.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.props.onRowAdd,\n      className: \"btn btn-success pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"table\", {\n      className: \"table tableViews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, ticket)), isNotValid && React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"duplicate names\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Order tickets\"));\n  }\n\n}\n\nclass TicketRow extends React.Component {\n  onDelEvent() {\n    this.props.onDelEvent(this.props.ticket);\n  }\n\n  render() {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(EditableCell, {\n      onTicketTableUpdate: this.props.onTicketTableUpdate,\n      cellData: {\n        type: \"firstName\",\n        value: this.props.ticket.firstName,\n        id: this.props.ticket.id\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(EditableCell, {\n      onTicketTableUpdate: this.props.onTicketTableUpdate,\n      cellData: {\n        type: \"lastName\",\n        value: this.props.ticket.lastName,\n        id: this.props.ticket.id\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        marginTop: 5\n      },\n      variant: \"outline-danger\",\n      onClick: this.onDelEvent.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"X\")));\n  }\n\n}\n\nclass EditableCell extends React.Component {\n  render() {\n    return React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: this.props.cellData.type,\n      id: this.props.cellData.id,\n      value: this.props.cellData.value,\n      onChange: this.props.onTicketTableUpdate,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/PurchchseTicket/AddTickets.js"],"names":["React","Component","Form","Button","axios","connect","Swal","BaseUrl","AddTickets","constructor","props","handleOrderTickets","event","preventDefault","data","state","tickets","f1","ID","DEPARTURE_TIME","f2","ADDRESS","PHONE_NO","CREDIT_CARD_NUMBER","console","log","JSON","stringify","result","i","length","j","firstName","lastName","setState","inputErrors","token","localStorage","getItem","post","url","headers","then","fire","position","icon","title","showConfirmButton","type","text","catch","error","filterText","componentDidMount","handleAddEvent","getFromRedux","postsData","posts","postId","handleChangeAddress","target","value","handleChangePhoneNo","handleCreditCardNumber","handleUserInput","handleRowDel","ticket","index","indexOf","splice","evt","id","Date","Math","floor","random","toString","push","handleTicketTable","item","name","slice","newTickets","map","key","render","fontSize","color","paddingTop","paddingBottom","textAlign","bind","mapStateToProps","TicketTable","isNotValid","onTicketTableUpdate","rowDel","onRowDel","onRowAdd","TicketRow","onDelEvent","marginTop","EditableCell","cellData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// import Button from 'react-bootstrap/Button'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport './AddTicket.css'\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport Swal from \"sweetalert2\";\r\nimport { BaseUrl } from '../../../constants/BaseUrl'\r\n\r\nclass AddTickets extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            filterText: \"\",\r\n            tickets: [],\r\n            f1: {},\r\n            f2: {},\r\n            inputErrors: false,\r\n            ADDRESS: '',\r\n            PHONE_NO: '',\r\n            CREDIT_CARD_NUMBER: ''\r\n\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.handleAddEvent();\r\n        this.getFromRedux();\r\n    }\r\n    getFromRedux() {\r\n        if (this.props.postsData.posts.length > 0) {\r\n            this.setState({ f1: this.props.postsData.posts[this.props.postId.postId].f1 })\r\n            this.setState({ f2: this.props.postsData.posts[this.props.postId.postId].f2 })\r\n        }\r\n    }\r\n    handleChangeAddress(event) {\r\n        this.setState({ ADDRESS: event.target.value })\r\n    }\r\n    handleChangePhoneNo(event) {\r\n        this.setState({ PHONE_NO: event.target.value })\r\n    }\r\n    handleCreditCardNumber(event) {\r\n        this.setState({ CREDIT_CARD_NUMBER: event.target.value })\r\n    }\r\n    handleOrderTickets = (event) => {\r\n        event.preventDefault();\r\n        let data = {\r\n            'tickets':\r\n                this.state.tickets,\r\n            'flights': [{\r\n\r\n                'ID': this.state.f1.ID,\r\n                'DepartureTime': this.state.f1.DEPARTURE_TIME\r\n            },\r\n            {\r\n                'ID': this.state.f2.ID,\r\n                'DepartureTime': this.state.f2.DEPARTURE_TIME\r\n\r\n            }],\r\n            'user': [{\r\n                'address': this.state.ADDRESS,\r\n                'phoneNo': this.state.PHONE_NO,\r\n                'creditCardNumber': this.state.CREDIT_CARD_NUMBER\r\n            }]\r\n        }\r\n        console.log(\"passangers: \" + JSON.stringify(data))\r\n        let result = false;\r\n        for (let i = 0; i < this.state.tickets.length; i++) {\r\n            for (let j = i + 1; j < this.state.tickets.length; j++) {\r\n                if (this.state.tickets[i].firstName === this.state.tickets[j].firstName && this.state.tickets[i].lastName === this.state.tickets[j].lastName) {\r\n                    result = true;\r\n                    break;\r\n                }\r\n                if (result === true) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({ inputErrors: result })\r\n\r\n        if (!result) {\r\n            console.log(\"Data to send: \" + JSON.stringify(data))\r\n            let token = localStorage.getItem('customer');\r\n            axios.post(BaseUrl.url + '/api/CustomerFacade/purchaseTickets', data, { headers: { 'Authorization': 'Bearer ' + token } })\r\n                .then((result) => {\r\n                    console.log(\"purchaseTickets result: \" + JSON.stringify(result))\r\n                    if (result.data === 'Tickets ordered succsesfully') {\r\n\r\n                        Swal.fire({\r\n                            position: 'center',\r\n                            icon: 'success',\r\n                            title: result.data,\r\n                            showConfirmButton: true\r\n                        });\r\n                    }\r\n                    else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            title: \"Oops..\",\r\n                            type: \"error\",\r\n                            text: result.data\r\n                        })\r\n                    }\r\n                }).catch((error) => {\r\n                    console.log(\"error: \" + error)\r\n                })\r\n        }\r\n\r\n    }\r\n    handleUserInput(filterText) {\r\n        this.setState({ filterText: filterText });\r\n    };\r\n\r\n    handleRowDel(ticket) {\r\n        var index = this.state.tickets.indexOf(ticket);\r\n        this.state.tickets.splice(index, 1);\r\n        this.setState(this.state.tickets);\r\n        this.setState({ inputErrors: false })\r\n    };\r\n\r\n    handleAddEvent(evt) {\r\n        var id = (+ new Date() + Math.floor(Math.random() * 999999)).toString(36);\r\n        var ticket = {\r\n            id: id,\r\n            firstName: \"\",\r\n            lastName: \"\"\r\n        }\r\n        this.state.tickets.push(ticket);\r\n        this.setState(this.state.tickets);\r\n\r\n    }\r\n\r\n    handleTicketTable(evt) {\r\n        var item = {\r\n            id: evt.target.id,\r\n            name: evt.target.name,\r\n            value: evt.target.value\r\n        };\r\n        var tickets = this.state.tickets.slice();\r\n        var newTickets = tickets.map(function (ticket) {\r\n\r\n            for (var key in ticket) {\r\n                if (key === item.name && ticket.id === item.id) {\r\n                    ticket[key] = item.value;\r\n                }\r\n            }\r\n            return ticket;\r\n        });\r\n\r\n        this.setState({ tickets: newTickets });\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"addTicketStyle\">\r\n                <div className=\"addTicketHeader\">\r\n                    <p style={{ fontSize: 23, color: 'white', paddingTop: 12, paddingBottom: 12, textAlign: 'center'}}>Complete the details to place your order</p>\r\n                </div>\r\n                <div className=\"AddTicketpadding\">\r\n                <p style={{ fontSize: 20 }}><span className=\"step\">1</span>Contact details and payment details</p>\r\n                <Form onSubmit={this.handleOrderTickets}>\r\n\r\n                    <Form.Group controlId=\"Address\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"ADDRESS\"\r\n                            defaultValue={this.state.ADDRESS}\r\n                            onChange={this.handleChangeAddress.bind(this)}\r\n                            placeholder=\"Address\"\r\n                            required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"Phone number\">\r\n                        <Form.Label>Phone number</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"PHONE_NO\"\r\n                            defaultValue={this.state.PHONE_NO}\r\n                            onChange={this.handleChangePhoneNo.bind(this)}\r\n                            placeholder=\"Phone number\"\r\n                            required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"Credit card number\">\r\n                        <Form.Label>Credit card number</Form.Label>\r\n                        <Form.Control\r\n                            type=\"search\"\r\n                            placeholder=\"xxxx xxxx xxxx xxxx\"\r\n                            name=\"CREDIT_CARD_NUMBER\"\r\n                            defaultValue={this.state.CREDIT_CARD_NUMBER}\r\n                            onChange={this.handleCreditCardNumber.bind(this)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <p style={{ fontSize: 20 }}><span className=\"step\">2</span>Add passengers names</p>\r\n                    <TicketTable\r\n                        onTicketTableUpdate={this.handleTicketTable.bind(this)}\r\n                        onRowAdd={this.handleAddEvent.bind(this)}\r\n                        onRowDel={this.handleRowDel.bind(this)}\r\n                        tickets={this.state.tickets}\r\n                        filterText={this.state.filterText}\r\n                        onOrderTickets={this.handleOrderTickets.bind(this)}\r\n                        inputErrors={this.state.inputErrors}\r\n                    />\r\n\r\n                </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"mapStateToProps  state Addtickets: \" + JSON.stringify(state))\r\n    return {\r\n        postsData: state.postsData,\r\n        postId: state.postId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddTickets);\r\n\r\nclass TicketTable extends React.Component {\r\n    render() {\r\n        let isNotValid = this.props.inputErrors\r\n        var onTicketTableUpdate = this.props.onTicketTableUpdate;\r\n        var rowDel = this.props.onRowDel;\r\n        var filterText = this.props.filterText;\r\n        var ticket = this.props.tickets.map(function (ticket) {\r\n            // console.log(\"tickets from TicketTable: \" + JSON.stringify(ticket))\r\n            if (ticket.firstName.indexOf(filterText) === -1) {\r\n                return '';\r\n            }\r\n            return (<TicketRow onTicketTableUpdate={onTicketTableUpdate} ticket={ticket} onDelEvent={rowDel.bind(this)} key={ticket.id} />)\r\n        });\r\n        return (\r\n            <div>\r\n                <button type=\"button\" onClick={this.props.onRowAdd} className=\"btn btn-success pull-right\">Add</button>\r\n                <table className=\"table tableViews\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {ticket}\r\n                    </tbody>\r\n                </table>\r\n                {isNotValid && <p style={{ color: 'red' }}>duplicate names</p>}\r\n                <button type=\"submit\" className=\"btn btn-success pull-right\">Order tickets</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nclass TicketRow extends React.Component {\r\n    onDelEvent() {\r\n        this.props.onDelEvent(this.props.ticket);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <tr>\r\n                <EditableCell onTicketTableUpdate={this.props.onTicketTableUpdate} cellData={{\r\n                    type: \"firstName\",\r\n                    value: this.props.ticket.firstName,\r\n                    id: this.props.ticket.id\r\n                }} />\r\n                <EditableCell onTicketTableUpdate={this.props.onTicketTableUpdate} cellData={{\r\n                    type: \"lastName\",\r\n                    value: this.props.ticket.lastName,\r\n                    id: this.props.ticket.id\r\n                }} />\r\n                <td>\r\n                    <Button style={{ marginTop: 5 }} variant=\"outline-danger\" onClick={this.onDelEvent.bind(this)}>X</Button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\nclass EditableCell extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <td>\r\n                <input type='text' name={this.props.cellData.type} id={this.props.cellData.id} value={this.props.cellData.value} onChange={this.props.onTicketTableUpdate} required />\r\n            </td>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}