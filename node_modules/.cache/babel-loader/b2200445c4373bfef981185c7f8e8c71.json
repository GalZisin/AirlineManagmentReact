{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\PurchchseTicket\\\\SelectDates.js\";\nimport React, { Component } from 'react';\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from '@fullcalendar/interaction';\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport './SelectDates.css';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport $ from \"jquery\";\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { history } from '../../../history';\nimport { BaseUrl } from '../../../constants/BaseUrl';\nlet dealFlightId = '';\nlet selectedDepDate = '';\nlet selectedRetDate = '';\n\nclass SelectDates extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLocalCountry = () => {\n      axios.get('https://ipapi.co/json/').then(res => {\n        console.log(\"local country \" + JSON.stringify(res.data.country_name));\n        this.setState({\n          originCountry: res.data.country_name\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleSelectFlight = () => {\n      if (this.state.selectedDepartureDate !== '' && this.state.selectedReturnDate) {\n        let flightData = {\n          departureFlight: this.state.selectedDepartureDate,\n          returnFlight: this.state.selectedReturnDate,\n          destinationCountry: this.state.destinationCountry,\n          companyName: this.state.companyName,\n          originCountry: this.state.originCountry\n        };\n        localStorage.setItem('selectedFlightData', JSON.stringify(flightData));\n        history.push('/');\n      }\n    };\n\n    this.handleClickMonthCalendar1 = () => {\n      $('[id=calendar1] button.fc-next-button').click(() => {\n        console.log(\"departureDates: \" + this.state.departureDates);\n        console.log(\"defaultDepartureDate: \" + this.state.defaultDepartureDate);\n        this.fillCalendarWithDepartureFlightsDates(this.state.departureDates, this.state.returnDates, this.state.defaultDepartureDate);\n      });\n      $('[id=calendar1] button.fc-prev-button').click(() => {\n        this.fillCalendarWithDepartureFlightsDates(this.state.departureDates, this.state.returnDates, this.state.defaultDepartureDate);\n      });\n    };\n\n    this.handleClickMonthCalendar2 = () => {\n      $('[id=calendar2] button.fc-next-button').click(() => {\n        console.log(\"departureDates: \" + this.state.departureDates);\n        this.fillCalendarWithReturnFlightsDates(this.state.returnDates);\n      });\n      $('[id=calendar2] button.fc-prev-button').click(() => {\n        this.fillCalendarWithReturnFlightsDates(this.state.returnDates);\n      });\n    };\n\n    this.moveToMonthCalendar2 = numOfMovesf => {\n      let numOfMoves = numOfMovesf;\n      let next = true;\n\n      if (numOfMovesf < 0) {\n        next = false;\n        numOfMoves = -1 * numOfMovesf;\n      }\n\n      if (numOfMoves > 1) {\n        var i;\n\n        for (i = 0; i < numOfMoves - 1; i++) {\n          if (next) {\n            $('[id=calendar2] button.fc-next-button').trigger('click');\n          } else {\n            console.log(\"prev\");\n            $('[id=calendar2] button.fc-prev-button').trigger('click');\n          }\n        }\n      }\n\n      console.log(\"before trigger: \" + numOfMoves);\n\n      if (next) {\n        $('[id=calendar2] button.fc-next-button').trigger('click');\n      } else {\n        console.log(\"prev1\");\n        $('[id=calendar2] button.fc-prev-button').trigger('click');\n      }\n\n      this.fillCalendarWithReturnFlightsDates(this.state.returnDates);\n    };\n\n    this.moveToMonthCalendar1 = numOfMoves => {\n      if (numOfMoves > 1) {\n        var i;\n\n        for (i = 0; i < numOfMoves - 1; i++) {\n          $('[id=calendar1] button.fc-next-button').trigger('click');\n        }\n      }\n\n      $('[id=calendar1] button.fc-next-button').trigger('click');\n    };\n\n    this.handleDateClickCalendar1 = arg => {\n      let color = '';\n      let prevSelectedDate = selectedDepDate;\n      color = $(`[id=calendar1] td.fc-day[data-date='${arg.dateStr}']`).css('background-color');\n\n      if (arg.dateStr !== prevSelectedDate && color !== 'rgba(234, 233, 232, 0.4)') {\n        selectedDepDate = arg.dateStr;\n        this.setState({\n          selectedDepartureDate: arg.dateStr\n        });\n        $(`[id=calendar1] td.fc-day[data-date='${prevSelectedDate}']`).css(\"background-color\", \"#FFF8DC\");\n        $(`[id=calendar1] td.fc-day[data-date='${selectedDepDate}']`).unbind('mouseenter mouseleave').css(\"background-color\", \"#339966\");\n        $(`[id=calendar1] td.fc-day[data-date='${prevSelectedDate}']`).hover(function () {\n          $(this).css(\"background\", \"#339966\");\n        }, function () {\n          $(this).css(\"background\", \"#FFF8DC\");\n        });\n      }\n\n      this.fillCalendarWithReturnFlightsDates(this.state.returnDates);\n      this.fillCalendarWithDepartureFlightsDates(this.state.departureDates);\n      let monthYear = $('[id=calendar1] div.fc-left h2').text();\n      let month1 = moment(monthYear).get('month') + 1;\n      monthYear = $('[id=calendar2] div.fc-left h2').text();\n      let month2 = moment(monthYear).get('month') + 1;\n      let numOfMoves = month1 - month2;\n      console.log(\"month1: \" + month1);\n      console.log(\"month2: \" + month2);\n      console.log(\"numOfMoves: \" + numOfMoves);\n\n      if (numOfMoves !== 0) {\n        this.moveToMonthCalendar2(numOfMoves);\n      }\n    };\n\n    this.handleDateClickCalendar2 = arg => {\n      let color = '';\n      let prevSelectedDate = selectedRetDate;\n      color = $(`[id=calendar2] td.fc-day[data-date='${arg.dateStr}']`).css('background-color');\n\n      if (arg.dateStr !== prevSelectedDate && color !== 'rgba(234, 233, 232, 0.4)') {\n        selectedRetDate = arg.dateStr;\n        this.setState({\n          selectedReturnDate: arg.dateStr\n        });\n        $(`[id=calendar2] td.fc-day[data-date='${prevSelectedDate}']`).css(\"background-color\", \"#FFF8DC\");\n        $(`[id=calendar2] td.fc-day[data-date='${selectedRetDate}']`).unbind('mouseenter mouseleave').css(\"background-color\", \"#339966\");\n        $(`[id=calendar2] td.fc-day[data-date='${prevSelectedDate}']`).hover(function () {\n          $(this).css(\"background\", \"#339966\");\n        }, function () {\n          $(this).css(\"background\", \"#FFF8DC\");\n        });\n      }\n    };\n\n    this.getFlightsToFillCalendar = flightId => {\n      console.log(\"flightId: \" + flightId);\n      let url = BaseUrl.url + '/api/AnonymousFacade/getFlightsToFillCalendar/' + flightId;\n      console.log(\"url: \" + url);\n      axios.get(url).then(result => {\n        result.data.departureDates.map((derturedate, index) => {\n          let fderturedate = moment(derturedate.REAL_DEPARTURE_TIME).format(\"YYYY-MM-DD\");\n          ;\n          console.log(\"fderturedate: \" + fderturedate);\n          this.state.departureDates.push(fderturedate);\n          this.setState({\n            departureDates: this.state.departureDates\n          });\n        });\n        console.log(\"departureDates: \" + JSON.stringify(this.state.departureDates));\n        result.data.returnDates.map((returnDates, index) => {\n          let freturnDates = moment(returnDates.REAL_DEPARTURE_TIME).format(\"YYYY-MM-DD\");\n          ;\n          console.log(\"freturnDates: \" + freturnDates);\n          this.state.returnDates.push(freturnDates);\n          this.setState({\n            returnDates: this.state.returnDates\n          });\n        });\n        this.setState({\n          companyName: result.data.CompanyName\n        });\n        let DefaultDepartureDate = moment(result.data.DefaultDepartureDate).format(\"YYYY-MM-DD\");\n        this.setState({\n          destinationCountry: result.data.DestinationCountry\n        });\n        console.log(\"DefaultDepartureDate: \" + DefaultDepartureDate);\n        selectedDepDate = DefaultDepartureDate;\n        let defaultMonth = moment(DefaultDepartureDate).get('month') + 1;\n        console.log(\"defaultMonth: \" + defaultMonth);\n        let monthNow = moment(new Date()).get('month') + 1;\n        console.log(\"monthNow: \" + monthNow);\n        let numOfMoves = defaultMonth - monthNow;\n        console.log(\"numOfMoves: \" + numOfMoves);\n\n        if (numOfMoves > 0) {\n          this.moveToMonthCalendar1(numOfMoves);\n          this.moveToMonthCalendar2(numOfMoves);\n        }\n\n        this.setState({\n          selectedDepartureDate: DefaultDepartureDate\n        });\n        this.fillCalendarWithDepartureFlightsDates(this.state.departureDates);\n        this.fillCalendarWithReturnFlightsDates(this.state.returnDates);\n      }, error => {\n        console.log(\"getFlightsToFillCalendar error: \" + error);\n      });\n    };\n\n    this.fillCalendarWithDepartureFlightsDates = departureDates => {\n      /////////////////////////////////////////////////////////////    departureDates   //////////////////////////////////////////////////////////////////\n      $(\"[id=calendar1] td.fc-day\").each(function () {\n        let flagEnable = false;\n        let calendarDate = $(this).attr('data-date');\n        departureDates.map(departureDate => {\n          if (!flagEnable) {\n            if (calendarDate === departureDate) {\n              flagEnable = true;\n            }\n          }\n        });\n\n        if (flagEnable === true) {\n          if (calendarDate === selectedDepDate) {\n            $(`[id=calendar1] td.fc-day[data-date='${calendarDate}']`).css(\"background-color\", \"#339966\");\n          } else {\n            $(`[id=calendar1] td.fc-day[data-date='${calendarDate}']`).css(\"background-color\", \"#FFF8DC\");\n            $(`[id=calendar1] td.fc-day[data-date='${calendarDate}']`).hover(function () {\n              $(this).css(\"background\", \"#339966\");\n            }, function () {\n              $(this).css(\"background\", \"#FFF8DC\");\n            });\n          }\n        } else {\n          $(`[id=calendar1] td.fc-day[data-date='${calendarDate}']`).css(\"background-color\", \"rgba(234, 233, 232, 0.4)\");\n        }\n      });\n    };\n\n    this.fillCalendarWithReturnFlightsDates = returnDates => {\n      /////////////////////////////////////////////////////////////    returnDates   //////////////////////////////////////////////////////////////////\n      let selectedDeparturDate = this.state.selectedDepartureDate;\n      $(\"[id=calendar2] td.fc-day\").each(function () {\n        let flagEnable = false;\n        let calendarDate = $(this).attr('data-date');\n        returnDates.map(returnDate => {\n          if (!flagEnable) {\n            if (calendarDate === returnDate && calendarDate > selectedDeparturDate) {\n              flagEnable = true;\n            }\n          }\n        });\n\n        if (flagEnable === true) {\n          $(`[id=calendar2] td.fc-day[data-date='${calendarDate}']`).css(\"background-color\", \"#FFF8DC\");\n          $(`[id=calendar2] td.fc-day[data-date='${calendarDate}']`).hover(function () {\n            $(this).css(\"background\", \"#339966\");\n          }, function () {\n            $(this).css(\"background\", \"\t#FFF8DC\");\n          });\n        } else {\n          $(`[id=calendar2] td.fc-day[data-date='${calendarDate}']`).unbind('mouseenter mouseleave').css(\"background-color\", \"rgba(234, 233, 232, 0.4)\");\n        }\n      });\n    };\n\n    this.state = {\n      departureDates: [],\n      returnDates: [],\n      companyName: '',\n      destinationCountry: '',\n      originCountry: '',\n      defaultDepartureDate: '',\n      selectedDepartureDate: '',\n      selectedReturnDate: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getLocalCountry();\n    this.getFlightsToFillCalendar(dealFlightId);\n  }\n\n  render() {\n    const {\n      companyName,\n      destinationCountry\n    } = this.state;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headerStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Flights with \", companyName, \" to \", destinationCountry))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"calendar2\",\n      className: \"container calendarStyles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row title\",\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12 btn btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Select a return date\")), React.createElement(FullCalendar, {\n      header: {\n        left: 'title',\n        center: '',\n        right: 'prev,next'\n      },\n      height: 600\n      /* contentHeight={600}  */\n      ,\n      defaultView: \"dayGridMonth\",\n      dateClick: this.handleDateClickCalendar2,\n      plugins: [interactionPlugin, timeGridPlugin, dayGridPlugin],\n      datesRender: this.handleClickMonthCalendar2,\n      editable: true,\n      selectable: false,\n      showNonCurrentDates: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"calendar1\",\n      className: \"container calendarStyles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row title\",\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12 btn btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Select a departure date\")), React.createElement(FullCalendar, {\n      header: {\n        left: 'title',\n        center: '',\n        right: 'prev,next'\n      },\n      height: 600\n      /* contentHeight={600}  */\n      ,\n      defaultView: \"dayGridMonth\",\n      dateClick: this.handleDateClickCalendar1,\n      plugins: [interactionPlugin, timeGridPlugin, dayGridPlugin],\n      datesRender: this.handleClickMonthCalendar1,\n      editable: true,\n      selectable: false,\n      showNonCurrentDates: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"selectedFlights\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: {\n        span: 2,\n        order: 1,\n        offset: 0\n      },\n      xs: {\n        span: 12,\n        order: 3,\n        offset: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"purchaseBtn\",\n      onClick: this.handleSelectFlight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"purchase now\")), React.createElement(Col, {\n      md: {\n        span: 5,\n        order: 3\n      },\n      xs: {\n        span: 12,\n        order: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"selectedDeparture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, this.state.selectedDepartureDate)), React.createElement(Col, {\n      md: {\n        span: 5,\n        order: 2\n      },\n      xs: {\n        span: 12,\n        order: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"selectedReturn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, this.state.selectedReturnDate)))))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  dealFlightId = ownProps.match.params.flight_id;\n  console.log(\"flight_id: \" + dealFlightId);\n  return state;\n};\n\nexport default connect(mapStateToProps, null)(SelectDates);","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/PurchchseTicket/SelectDates.js"],"names":["React","Component","FullCalendar","dayGridPlugin","interactionPlugin","timeGridPlugin","Container","Row","Col","Button","$","connect","axios","moment","history","BaseUrl","dealFlightId","selectedDepDate","selectedRetDate","SelectDates","constructor","props","getLocalCountry","get","then","res","console","log","JSON","stringify","data","country_name","setState","originCountry","catch","error","handleSelectFlight","state","selectedDepartureDate","selectedReturnDate","flightData","departureFlight","returnFlight","destinationCountry","companyName","localStorage","setItem","push","handleClickMonthCalendar1","click","departureDates","defaultDepartureDate","fillCalendarWithDepartureFlightsDates","returnDates","handleClickMonthCalendar2","fillCalendarWithReturnFlightsDates","moveToMonthCalendar2","numOfMovesf","numOfMoves","next","i","trigger","moveToMonthCalendar1","handleDateClickCalendar1","arg","color","prevSelectedDate","dateStr","css","unbind","hover","monthYear","text","month1","month2","handleDateClickCalendar2","getFlightsToFillCalendar","flightId","url","result","map","derturedate","index","fderturedate","REAL_DEPARTURE_TIME","format","freturnDates","CompanyName","DefaultDepartureDate","DestinationCountry","defaultMonth","monthNow","Date","each","flagEnable","calendarDate","attr","departureDate","selectedDeparturDate","returnDate","componentDidMount","render","marginTop","left","center","right","span","order","offset","mapStateToProps","ownProps","match","params","flight_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport \"@fullcalendar/core/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport './SelectDates.css'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\nimport $ from \"jquery\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { history } from '../../../history';\r\nimport { BaseUrl } from '../../../constants/BaseUrl'\r\n\r\nlet dealFlightId = '';\r\nlet selectedDepDate = '';\r\nlet selectedRetDate = '';\r\n\r\nclass SelectDates extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            departureDates: [],\r\n            returnDates: [],\r\n            companyName: '',\r\n            destinationCountry: '',\r\n            originCountry:'',\r\n            defaultDepartureDate: '',\r\n            selectedDepartureDate: '',\r\n            selectedReturnDate: ''\r\n        };\r\n\r\n    }\r\n    getLocalCountry = () => {\r\n        axios.get('https://ipapi.co/json/')\r\n            .then(res => {\r\n                console.log(\"local country \" + JSON.stringify(res.data.country_name));\r\n                this.setState({ originCountry: res.data.country_name })\r\n            })\r\n\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    handleSelectFlight = () => {\r\n        if (this.state.selectedDepartureDate !== '' && this.state.selectedReturnDate) {\r\n            let flightData = {\r\n                departureFlight: this.state.selectedDepartureDate,\r\n                returnFlight: this.state.selectedReturnDate,\r\n                destinationCountry: this.state.destinationCountry,\r\n                companyName: this.state.companyName,\r\n                originCountry: this.state.originCountry\r\n            }\r\n\r\n            localStorage.setItem('selectedFlightData', JSON.stringify(flightData))\r\n            history.push('/');\r\n        }\r\n\r\n    }\r\n    handleClickMonthCalendar1 = () => {\r\n\r\n        $('[id=calendar1] button.fc-next-button').click(() => {\r\n\r\n            console.log(\"departureDates: \" + this.state.departureDates)\r\n            console.log(\"defaultDepartureDate: \" + this.state.defaultDepartureDate)\r\n            this.fillCalendarWithDepartureFlightsDates(this.state.departureDates, this.state.returnDates, this.state.defaultDepartureDate);\r\n\r\n\r\n\r\n        });\r\n\r\n        $('[id=calendar1] button.fc-prev-button').click(() => {\r\n\r\n            this.fillCalendarWithDepartureFlightsDates(this.state.departureDates, this.state.returnDates, this.state.defaultDepartureDate);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    handleClickMonthCalendar2 = () => {\r\n\r\n        $('[id=calendar2] button.fc-next-button').click(() => {\r\n\r\n            console.log(\"departureDates: \" + this.state.departureDates)\r\n            this.fillCalendarWithReturnFlightsDates(this.state.returnDates);\r\n\r\n        });\r\n\r\n        $('[id=calendar2] button.fc-prev-button').click(() => {\r\n\r\n            this.fillCalendarWithReturnFlightsDates(this.state.returnDates);\r\n\r\n\r\n        });\r\n\r\n    }\r\n    moveToMonthCalendar2 = (numOfMovesf) => {\r\n        let numOfMoves = numOfMovesf;\r\n        let next = true;\r\n        if (numOfMovesf < 0) {\r\n            next = false;\r\n            numOfMoves = (-1) * numOfMovesf;\r\n        }\r\n        if (numOfMoves > 1) {\r\n\r\n            var i;\r\n            for (i = 0; i < numOfMoves - 1; i++) {\r\n                if (next) {\r\n                    $('[id=calendar2] button.fc-next-button').trigger('click');\r\n                }\r\n                else {\r\n                    console.log(\"prev\")\r\n                    $('[id=calendar2] button.fc-prev-button').trigger('click');\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        console.log(\"before trigger: \" + numOfMoves)\r\n        if (next) {\r\n            $('[id=calendar2] button.fc-next-button').trigger('click');\r\n        }\r\n        else {\r\n            console.log(\"prev1\")\r\n\r\n            $('[id=calendar2] button.fc-prev-button').trigger('click');\r\n        }\r\n        this.fillCalendarWithReturnFlightsDates(this.state.returnDates);\r\n    }\r\n    moveToMonthCalendar1 = (numOfMoves) => {\r\n        if (numOfMoves > 1) {\r\n            var i;\r\n            for (i = 0; i < numOfMoves - 1; i++) {\r\n                $('[id=calendar1] button.fc-next-button').trigger('click');\r\n            }\r\n        }\r\n        $('[id=calendar1] button.fc-next-button').trigger('click');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLocalCountry();\r\n        this.getFlightsToFillCalendar(dealFlightId);\r\n    }\r\n\r\n    handleDateClickCalendar1 = (arg) => {\r\n        let color = '';\r\n        let prevSelectedDate = selectedDepDate;\r\n\r\n        color = $(`[id=calendar1] td.fc-day[data-date='${arg.dateStr}']`).css('background-color');\r\n\r\n        if (arg.dateStr !== prevSelectedDate && color !== 'rgba(234, 233, 232, 0.4)') {\r\n            selectedDepDate = arg.dateStr;\r\n            this.setState({ selectedDepartureDate: arg.dateStr })\r\n            $(`[id=calendar1] td.fc-day[data-date='${prevSelectedDate}']`).css(\"background-color\", \"#FFF8DC\")\r\n            $(`[id=calendar1] td.fc-day[data-date='${selectedDepDate}']`).unbind('mouseenter mouseleave').css(\"background-color\", \"#339966\")\r\n            $(`[id=calendar1] td.fc-day[data-date='${prevSelectedDate}']`).hover(function () {\r\n                $(this).css(\"background\", \"#339966\");\r\n            },\r\n                function () {\r\n                    $(this).css(\"background\", \"#FFF8DC\");\r\n                });\r\n        }\r\n        this.fillCalendarWithReturnFlightsDates(this.state.returnDates);\r\n        this.fillCalendarWithDepartureFlightsDates(this.state.departureDates);\r\n        let monthYear = $('[id=calendar1] div.fc-left h2').text()\r\n        let month1 = moment(monthYear).get('month') + 1\r\n        monthYear = $('[id=calendar2] div.fc-left h2').text()\r\n        let month2 = moment(monthYear).get('month') + 1\r\n        let numOfMoves = month1 - month2;\r\n        console.log(\"month1: \" + month1)\r\n        console.log(\"month2: \" + month2)\r\n        console.log(\"numOfMoves: \" + numOfMoves)\r\n        if (numOfMoves !== 0) {\r\n            this.moveToMonthCalendar2(numOfMoves);\r\n        }\r\n    }\r\n    handleDateClickCalendar2 = (arg) => {\r\n        let color = '';\r\n        let prevSelectedDate = selectedRetDate;\r\n\r\n        color = $(`[id=calendar2] td.fc-day[data-date='${arg.dateStr}']`).css('background-color');\r\n\r\n        if (arg.dateStr !== prevSelectedDate && color !== 'rgba(234, 233, 232, 0.4)') {\r\n            selectedRetDate = arg.dateStr;\r\n            this.setState({ selectedReturnDate: arg.dateStr })\r\n            $(`[id=calendar2] td.fc-day[data-date='${prevSelectedDate}']`).css(\"background-color\", \"#FFF8DC\")\r\n            $(`[id=calendar2] td.fc-day[data-date='${selectedRetDate}']`).unbind('mouseenter mouseleave').css(\"background-color\", \"#339966\")\r\n            $(`[id=calendar2] td.fc-day[data-date='${prevSelectedDate}']`).hover(function () {\r\n                $(this).css(\"background\", \"#339966\");\r\n            },\r\n                function () {\r\n                    $(this).css(\"background\", \"#FFF8DC\");\r\n                });\r\n        }\r\n    }\r\n    getFlightsToFillCalendar = (flightId) => {\r\n        console.log(\"flightId: \" + flightId)\r\n        let url = BaseUrl.url + '/api/AnonymousFacade/getFlightsToFillCalendar/' + flightId;\r\n        console.log(\"url: \" + url)\r\n        axios.get(url)\r\n            .then((result) => {\r\n\r\n                result.data.departureDates.map((derturedate, index) => {\r\n                    let fderturedate = moment(derturedate.REAL_DEPARTURE_TIME).format(\"YYYY-MM-DD\");;\r\n                    console.log(\"fderturedate: \" + fderturedate)\r\n                    this.state.departureDates.push(fderturedate);\r\n                    this.setState({ departureDates: this.state.departureDates })\r\n                });\r\n                console.log(\"departureDates: \" + JSON.stringify(this.state.departureDates))\r\n                result.data.returnDates.map((returnDates, index) => {\r\n                    let freturnDates = moment(returnDates.REAL_DEPARTURE_TIME).format(\"YYYY-MM-DD\");;\r\n                    console.log(\"freturnDates: \" + freturnDates)\r\n                    this.state.returnDates.push(freturnDates);\r\n                    this.setState({ returnDates: this.state.returnDates })\r\n                });\r\n\r\n                this.setState({ companyName: result.data.CompanyName })\r\n\r\n                let DefaultDepartureDate = moment(result.data.DefaultDepartureDate).format(\"YYYY-MM-DD\");\r\n\r\n                this.setState({ destinationCountry: result.data.DestinationCountry })\r\n\r\n                console.log(\"DefaultDepartureDate: \" + DefaultDepartureDate)\r\n\r\n                selectedDepDate = DefaultDepartureDate;\r\n\r\n                let defaultMonth = moment(DefaultDepartureDate).get('month') + 1;\r\n                console.log(\"defaultMonth: \" + defaultMonth)\r\n                let monthNow = moment(new Date()).get('month') + 1;\r\n                console.log(\"monthNow: \" + monthNow)\r\n                let numOfMoves = defaultMonth - monthNow;\r\n                console.log(\"numOfMoves: \" + numOfMoves)\r\n                if (numOfMoves > 0) {\r\n                    this.moveToMonthCalendar1(numOfMoves)\r\n                    this.moveToMonthCalendar2(numOfMoves)\r\n                }\r\n\r\n                this.setState({ selectedDepartureDate: DefaultDepartureDate })\r\n                this.fillCalendarWithDepartureFlightsDates(this.state.departureDates);\r\n                this.fillCalendarWithReturnFlightsDates(this.state.returnDates);\r\n            },\r\n                (error) => {\r\n                    console.log(\"getFlightsToFillCalendar error: \" + error);\r\n                }\r\n            )\r\n    }\r\n\r\n    fillCalendarWithDepartureFlightsDates = (departureDates) => {\r\n\r\n        /////////////////////////////////////////////////////////////    departureDates   //////////////////////////////////////////////////////////////////\r\n\r\n        $(\"[id=calendar1] td.fc-day\").each(function () {\r\n            let flagEnable = false;\r\n            let calendarDate = $(this).attr('data-date')\r\n            departureDates.map((departureDate) => {\r\n\r\n                if (!flagEnable) {\r\n                    if (calendarDate === departureDate) {\r\n                        flagEnable = true;\r\n                    }\r\n                }\r\n            })\r\n            if (flagEnable === true) {\r\n                if (calendarDate === selectedDepDate) {\r\n                    $(`[id=calendar1] td.fc-day[data-date='${calendarDate}']`).css(\"background-color\", \"#339966\")\r\n\r\n                }\r\n                else {\r\n                    $(`[id=calendar1] td.fc-day[data-date='${calendarDate}']`).css(\"background-color\", \"#FFF8DC\")\r\n\r\n                    $(`[id=calendar1] td.fc-day[data-date='${calendarDate}']`).hover(function () {\r\n                        $(this).css(\"background\", \"#339966\");\r\n                    },\r\n                        function () {\r\n                            $(this).css(\"background\", \"#FFF8DC\");\r\n                        });\r\n                }\r\n            }\r\n            else {\r\n                $(`[id=calendar1] td.fc-day[data-date='${calendarDate}']`).css(\"background-color\", \"rgba(234, 233, 232, 0.4)\")\r\n            }\r\n        });\r\n    }\r\n    fillCalendarWithReturnFlightsDates = (returnDates) => {\r\n\r\n        /////////////////////////////////////////////////////////////    returnDates   //////////////////////////////////////////////////////////////////\r\n\r\n        let selectedDeparturDate = this.state.selectedDepartureDate;\r\n        $(\"[id=calendar2] td.fc-day\").each(function () {\r\n            let flagEnable = false;\r\n            let calendarDate = $(this).attr('data-date')\r\n            returnDates.map((returnDate) => {\r\n\r\n                if (!flagEnable) {\r\n                    if (calendarDate === returnDate && calendarDate > selectedDeparturDate) {\r\n                        flagEnable = true;\r\n                    }\r\n                }\r\n            })\r\n            if (flagEnable === true) {\r\n                $(`[id=calendar2] td.fc-day[data-date='${calendarDate}']`).css(\"background-color\", \"#FFF8DC\")\r\n\r\n                $(`[id=calendar2] td.fc-day[data-date='${calendarDate}']`).hover(function () {\r\n                    $(this).css(\"background\", \"#339966\");\r\n                },\r\n                    function () {\r\n                        $(this).css(\"background\", \"\t#FFF8DC\");\r\n                    });\r\n            }\r\n            else {\r\n                $(`[id=calendar2] td.fc-day[data-date='${calendarDate}']`).unbind('mouseenter mouseleave').css(\"background-color\", \"rgba(234, 233, 232, 0.4)\")\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        const { companyName, destinationCountry } = this.state\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12} xs={12}><div className=\"headerStyle\">Flights with {companyName} to {destinationCountry}</div></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col md={6} xs={12}>\r\n                        <div id=\"calendar2\" className=\"container calendarStyles\" >\r\n                            <div className=\"row title\" style={{ marginTop: \"20px\" }} >\r\n                                <div className=\"col-sm-12 btn btn-info\">\r\n                                    Select a return date\r\n               </div>\r\n                            </div>\r\n                            <FullCalendar\r\n                                header={{\r\n                                    left: 'title',\r\n                                    center: '',\r\n                                    right: 'prev,next'\r\n                                }}\r\n                                height={600}\r\n                                /* contentHeight={600}  */\r\n                                defaultView=\"dayGridMonth\"\r\n                                dateClick={this.handleDateClickCalendar2}\r\n                                plugins={[interactionPlugin, timeGridPlugin, dayGridPlugin]}\r\n                                datesRender={this.handleClickMonthCalendar2}\r\n                                editable={true}\r\n                                selectable={false}\r\n                                showNonCurrentDates={false}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={6} xs={12}>\r\n                        <div id=\"calendar1\" className=\"container calendarStyles\" >\r\n                            <div className=\"row title\" style={{ marginTop: \"20px\" }} >\r\n                                <div className=\"col-sm-12 btn btn-info\">\r\n                                    Select a departure date\r\n               </div>\r\n                            </div>\r\n\r\n                            <FullCalendar\r\n                                header={{\r\n                                    left: 'title',\r\n                                    center: '',\r\n                                    right: 'prev,next'\r\n                                }\r\n\r\n                                }\r\n                                height={600}\r\n                                /* contentHeight={600}  */\r\n                                defaultView=\"dayGridMonth\"\r\n                                dateClick={this.handleDateClickCalendar1}\r\n                                plugins={[interactionPlugin, timeGridPlugin, dayGridPlugin]}\r\n                                datesRender={this.handleClickMonthCalendar1}\r\n                                editable={true}\r\n                                selectable={false}\r\n                                showNonCurrentDates={false}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12} xs={12} ><div className=\"selectedFlights\">\r\n                        <Row>\r\n                            <Col md={{ span: 2, order: 1, offset: 0 }} xs={{ span: 12, order: 3, offset: 4 }}>\r\n                                <Button className=\"purchaseBtn\" onClick={this.handleSelectFlight}>purchase now</Button>\r\n                            </Col>\r\n                            <Col md={{ span: 5, order: 3 }} xs={{ span: 12, order: 1 }}>\r\n                                <div className=\"selectedDeparture\">{this.state.selectedDepartureDate}</div>\r\n                            </Col>\r\n                            <Col md={{ span: 5, order: 2 }} xs={{ span: 12, order: 2 }}>\r\n                                <div className=\"selectedReturn\">{this.state.selectedReturnDate}</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    dealFlightId = ownProps.match.params.flight_id\r\n    console.log(\"flight_id: \" + dealFlightId);\r\n    return state;\r\n}\r\nexport default connect(mapStateToProps, null)(SelectDates);"]},"metadata":{},"sourceType":"module"}