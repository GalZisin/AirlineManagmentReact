{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\AirlineCompanyAccount\\\\AirlineCompanyPages\\\\FlightList.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport '../../TableList.css';\nimport Moment from 'moment';\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\nimport '../../../../../node_modules/react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport Swal from \"sweetalert2\";\nimport { history } from '../../../../history';\nimport { logout } from '../../../../actions/user.actions';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BaseUrl } from '../../../../constants/BaseUrl';\n\nclass CompanyList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllFlightsByAirlineCompanyId = companyId => {\n      let token = localStorage.getItem('airlineCompany');\n      axios.get(BaseUrl.url + '/api/AirlineCompanyFacade/GetAllFlightsByAirlineCompanyId/' + companyId, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        this.setState({\n          flights: result.data\n        });\n      }, error => {\n        this.setState({\n          error\n        });\n\n        if (error.message === 'Request failed with status code 401') {\n          this.props.logout();\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            type: \"error\",\n            text: \"Your token expires, please re-login!\"\n          });\n          history.push('/');\n        }\n      });\n    };\n\n    this.state = {\n      error: null,\n      flights: [],\n      company: [],\n      response: {},\n      companyId: '',\n      countriesData: []\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('airlineCompany');\n    const instance = axios.create({\n      baseURL: BaseUrl.url + '/api/AirlineCompanyFacade',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    instance.get('/getAirlineCompanyId').then(result => {\n      this.setState({\n        companyId: result.data\n      });\n      this.getAllFlightsByAirlineCompanyId(this.state.companyId);\n      console.log(\"getAirlineCompanyId  id:\" + this.state.companyId);\n    }, error => {\n      this.setState({\n        error\n      });\n      console.log(\"error: \" + JSON.stringify(error));\n\n      if (error.message === 'Request failed with status code 401') {\n        this.props.logout();\n        Swal.fire({\n          icon: 'warning',\n          title: \"Oops..\",\n          type: \"error\",\n          text: \"Your token expires, please re-login!\"\n        });\n        history.push('/');\n      }\n    });\n  }\n\n  deleteCompany(flightId) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n      if (result.value) {\n        let token = localStorage.getItem('airlineCompany');\n        const {\n          flights\n        } = this.state;\n        axios.delete(BaseUrl.url + '/api/AirlineCompanyFacade/deleteflight/' + flightId, {\n          headers: {\n            'Authorization': 'Bearer ' + token\n          }\n        }).then(result => {\n          console.log(\"deleteflight: \" + JSON.stringify(result));\n\n          if (result.data === `Flight with ID = ${flightId} deleted succsesfully`) {\n            Swal.fire('Deleted!', result.data, 'success');\n          } else {\n            Swal.fire({\n              icon: 'warning',\n              title: \"Oops..\",\n              text: result.data\n            });\n          }\n\n          this.setState({\n            response: result,\n            flights: flights.filter(flight => flight.ID !== flightId)\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      error,\n      flights\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Error:\", error.message);\n    } else {\n      Moment.locale('en');\n      return React.createElement(Table, {\n        className: \"tableFixHead tableViews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Thead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Tr, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Th, {\n        className: \"iddWidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Flight Number\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Origin country\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Destination country\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Departure date\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Landing date\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Remaining tickets\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Total tickets\"), React.createElement(Th, {\n        className: \"cFlightWidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(Tbody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, flights.map(flight => React.createElement(Tr, {\n        key: flight.ID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, flight.FLIGHT_NUMBER), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, flight.AIRLINE_NAME), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, flight.O_COUNTRY_NAME), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, flight.D_COUNTRY_NAME), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, Moment(flight.REAL_DEPARTURE_TIME).format('MMM dddd Do YYYY, HH:mm')), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, Moment(flight.REAL_LANDING_TIME).format('MMM dddd Do YYYY, HH:mm')), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, flight.REMANING_TICKETS), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, flight.TOTAL_TICKETS), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"editBtn\",\n        variant: \"info\",\n        style: {\n          borderRadius: 0\n        },\n        onClick: () => this.props.editFlight(flight.ID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Edit\"), \"  \\xA0\\xA0\\xA0\", React.createElement(Button, {\n        id: \"deletBtn\",\n        variant: \"danger\",\n        style: {\n          borderRadius: 0\n        },\n        onClick: () => this.deleteCompany(flight.ID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Delete\"))))));\n    }\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: bindActionCreators(logout, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CompanyList);","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/AirlineCompanyAccount/AirlineCompanyPages/FlightList.js"],"names":["React","Button","axios","Moment","Table","Thead","Tbody","Tr","Th","Td","Swal","history","logout","bindActionCreators","connect","BaseUrl","CompanyList","Component","constructor","props","getAllFlightsByAirlineCompanyId","companyId","token","localStorage","getItem","get","url","headers","then","result","setState","flights","data","error","message","fire","icon","title","type","text","push","state","company","response","countriesData","componentDidMount","instance","create","baseURL","console","log","JSON","stringify","deleteCompany","flightId","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","value","delete","filter","flight","ID","render","locale","map","FLIGHT_NUMBER","AIRLINE_NAME","O_COUNTRY_NAME","D_COUNTRY_NAME","REAL_DEPARTURE_TIME","format","REAL_LANDING_TIME","REMANING_TICKETS","TOTAL_TICKETS","borderRadius","editFlight","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport '../../TableList.css'\r\nimport Moment from 'moment';\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table'\r\nimport '../../../../../node_modules/react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\nimport Swal from \"sweetalert2\";\r\nimport { history } from '../../../../history';\r\nimport { logout } from '../../../../actions/user.actions';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { BaseUrl } from '../../../../constants/BaseUrl'\r\n\r\nclass CompanyList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            flights: [],\r\n            company: [],\r\n            response: {},\r\n            companyId: '',\r\n            countriesData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let token = localStorage.getItem('airlineCompany');\r\n\r\n\r\n        const instance = axios.create({\r\n            baseURL: BaseUrl.url + '/api/AirlineCompanyFacade', headers: { 'Authorization': 'Bearer ' + token }\r\n        });\r\n\r\n        instance.get('/getAirlineCompanyId')\r\n            .then((result) => {\r\n                this.setState({\r\n                    companyId: result.data\r\n                });\r\n                this.getAllFlightsByAirlineCompanyId(this.state.companyId)\r\n                console.log(\"getAirlineCompanyId  id:\" + this.state.companyId)\r\n            },\r\n                (error) => {\r\n                    this.setState({ error });\r\n                    console.log(\"error: \" + JSON.stringify(error))\r\n                    if (error.message === 'Request failed with status code 401') {\r\n                        this.props.logout();\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            title: \"Oops..\",\r\n                            type: \"error\",\r\n                            text: \"Your token expires, please re-login!\",\r\n                        });\r\n                        history.push('/');\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    getAllFlightsByAirlineCompanyId = (companyId) => {\r\n        let token = localStorage.getItem('airlineCompany');\r\n        axios.get(BaseUrl.url + '/api/AirlineCompanyFacade/GetAllFlightsByAirlineCompanyId/' + companyId, { headers: { 'Authorization': 'Bearer ' + token } })\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        flights: result.data\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({ error });\r\n                    if (error.message === 'Request failed with status code 401') {\r\n                        this.props.logout();\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            title: \"Oops..\",\r\n                            type: \"error\",\r\n                            text: \"Your token expires, please re-login!\",\r\n                        });\r\n                        history.push('/');\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteCompany(flightId) {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                let token = localStorage.getItem('airlineCompany');\r\n                const { flights } = this.state;\r\n                axios.delete(BaseUrl.url + '/api/AirlineCompanyFacade/deleteflight/' + flightId, { headers: { 'Authorization': 'Bearer ' + token } })\r\n                    .then(result => {\r\n                        console.log(\"deleteflight: \" + JSON.stringify(result))\r\n                        if (result.data === `Flight with ID = ${flightId} deleted succsesfully`) {\r\n                            Swal.fire(\r\n                                'Deleted!',\r\n                                result.data,\r\n                                'success'\r\n                            )\r\n                        }\r\n                        else {\r\n                            Swal.fire({\r\n                                icon: 'warning',\r\n                                title: \"Oops..\",\r\n                                text: result.data\r\n                            });\r\n                        }\r\n                        this.setState({\r\n                            response: result,\r\n                            flights: flights.filter(flight => flight.ID !== flightId)\r\n                        });\r\n                    });\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n\r\n        const { error, flights } = this.state;\r\n        if (error) {\r\n            return (\r\n                <div>Error:{error.message}</div>\r\n            )\r\n        }\r\n        else {\r\n            Moment.locale('en');\r\n\r\n            return (\r\n\r\n                <Table className='tableFixHead tableViews'>\r\n                    <Thead>\r\n                        <Tr>\r\n                            <Th className=\"iddWidth\">Flight Number</Th>\r\n                            <Th>Company Name</Th>\r\n                            <Th>Origin country</Th>\r\n                            <Th>Destination country</Th>\r\n                            <Th>Departure date</Th>\r\n                            <Th>Landing date</Th>\r\n                            <Th>Remaining tickets</Th>\r\n                            <Th>Total tickets</Th>\r\n                            <Th className=\"cFlightWidth\">Action</Th>\r\n\r\n                            {/* <Th className=\"iddWidth\">Flight Number</Th>\r\n                            <Th className=\"cndWidth\">Company Name</Th>\r\n                            <Th className=\"ocdWidth\">Origin country</Th>\r\n                            <Th className=\"dcdWidth\">Destination country</Th>\r\n                            <Th className=\"dtdWidth\">Departure date</Th>\r\n                            <Th className=\"ltdWidth\">Landing date</Th>\r\n                            <Th className=\"rtdWidth\">Remaining tickets</Th>\r\n                            <Th className=\"ttdWidth\">Total tickets</Th>\r\n                            <Th className=\"aWidth\">Action</Th> */}\r\n                        </Tr>\r\n                    </Thead>\r\n                    <Tbody>\r\n                        {flights.map(flight => (\r\n                            <Tr key={flight.ID}>\r\n                                <Td>{flight.FLIGHT_NUMBER}</Td>\r\n                                <Td>{flight.AIRLINE_NAME}</Td>\r\n                                <Td>{flight.O_COUNTRY_NAME}</Td>\r\n                                <Td>{flight.D_COUNTRY_NAME}</Td>\r\n                                <Td>{Moment(flight.REAL_DEPARTURE_TIME).format('MMM dddd Do YYYY, HH:mm')}</Td>\r\n                                <Td>{Moment(flight.REAL_LANDING_TIME).format('MMM dddd Do YYYY, HH:mm')}</Td>\r\n                                <Td>{flight.REMANING_TICKETS}</Td>\r\n                                <Td>{flight.TOTAL_TICKETS}</Td>\r\n                                <Td><Button id=\"editBtn\" variant=\"info\" style={{ borderRadius: 0 }} onClick={() => this.props.editFlight(flight.ID)}>Edit</Button>  &nbsp;&nbsp;&nbsp;\r\n                          <Button id=\"deletBtn\" variant=\"danger\" style={{ borderRadius: 0 }} onClick={() => this.deleteCompany(flight.ID)}>Delete</Button>\r\n\r\n                                </Td>\r\n                            </Tr>\r\n                        ))}\r\n                    </Tbody>\r\n                </Table>\r\n\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: bindActionCreators(logout, dispatch),\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(CompanyList);\r\n"]},"metadata":{},"sourceType":"module"}