{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\Administrator\\\\AdminPages\\\\CompanyList.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport '../../TableList.css';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Swal from \"sweetalert2\";\nimport { history } from '../../../../history';\nimport { logout } from '../../../../actions/user.actions';\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\nimport '../../../../../node_modules/react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport { BaseUrl } from '../../../../constants/BaseUrl';\n\nclass CompanyList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      companies: [],\n      response: {}\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('admin');\n    const instance = axios.create({\n      baseURL: BaseUrl.url + '/api/AdministratorFacade',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    instance.post('/getallairlinecompanies').then(result => {\n      this.setState({\n        companies: result.data\n      }); // console.log(\"companies: \" + JSON.stringify(result.data))\n    }, error => {\n      this.setState({\n        error\n      });\n\n      if (error.message === 'Request failed with status code 401') {\n        this.props.logout();\n        Swal.fire({\n          icon: 'warning',\n          title: \"Oops..\",\n          type: \"error\",\n          text: \"Your token expires, please re-login!\"\n        });\n        history.push('/');\n      }\n    });\n  }\n\n  deleteCompany(companyId) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n      if (result.value) {\n        let token = localStorage.getItem('admin');\n        const {\n          companies\n        } = this.state;\n        axios.delete(BaseUrl.url + '/api/AdministratorFacade/deletecompany/' + companyId, {\n          headers: {\n            'Authorization': 'Bearer ' + token\n          }\n        }).then(result => {\n          console.log(\"result.data.ID: \" + JSON.stringify(result));\n\n          if (result.status === 200) {\n            Swal.fire('Deleted!', `Airline company with ID = ${result.data} deleted succsesfully`, 'success');\n          } else {\n            Swal.fire({\n              icon: 'warning',\n              title: \"Oops..\",\n              type: \"error\",\n              text: result.data\n            });\n          }\n\n          this.setState({\n            response: result,\n            companies: companies.filter(company => company.ID !== companyId)\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      error,\n      companies\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Error:\", error.message);\n    } else {\n      return React.createElement(Table, {\n        className: \"tableFixHead tableViews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Thead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Tr, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"ID\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"User Name\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Country Code\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Country Name\"), React.createElement(Th, {\n        className: \"cActionW\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(Tbody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, companies.map(company => React.createElement(Tr, {\n        key: company.ID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, company.ID), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, company.AIRLINE_NAME), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, company.USER_NAME), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, company.PASSWORD), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, company.COUNTRY_CODE), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, company.COUNTRY_NAME), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"editBtn\",\n        variant: \"info\",\n        style: {\n          borderRadius: 0\n        },\n        onClick: () => this.props.editCompany(company.ID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Edit\"), \"  \\xA0\\xA0\\xA0\", React.createElement(Button, {\n        id: \"deletBtn\",\n        variant: \"danger\",\n        style: {\n          borderRadius: 0\n        },\n        onClick: () => this.deleteCompany(company.ID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Delete\"))))));\n    }\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: bindActionCreators(logout, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CompanyList);","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/Administrator/AdminPages/CompanyList.js"],"names":["React","Button","axios","bindActionCreators","connect","Swal","history","logout","Table","Thead","Tbody","Tr","Th","Td","BaseUrl","CompanyList","Component","constructor","props","state","error","companies","response","componentDidMount","token","localStorage","getItem","instance","create","baseURL","url","headers","post","then","result","setState","data","message","fire","icon","title","type","text","push","deleteCompany","companyId","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","value","delete","console","log","JSON","stringify","status","filter","company","ID","render","map","AIRLINE_NAME","USER_NAME","PASSWORD","COUNTRY_CODE","COUNTRY_NAME","borderRadius","editCompany","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport '../../TableList.css'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport Swal from \"sweetalert2\";\r\nimport { history } from '../../../../history';\r\nimport { logout } from '../../../../actions/user.actions';\r\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table'\r\nimport '../../../../../node_modules/react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\nimport { BaseUrl } from '../../../../constants/BaseUrl'\r\n\r\nclass CompanyList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      companies: [],\r\n      response: {}\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    let token = localStorage.getItem('admin');\r\n\r\n    const instance = axios.create({\r\n      baseURL: BaseUrl.url + '/api/AdministratorFacade', headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n\r\n    instance.post('/getallairlinecompanies')\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            companies: result.data\r\n          });\r\n          // console.log(\"companies: \" + JSON.stringify(result.data))\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n          if (error.message === 'Request failed with status code 401') {\r\n            this.props.logout();\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              type: \"error\",\r\n              text: \"Your token expires, please re-login!\",\r\n            });\r\n            history.push('/');\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  deleteCompany(companyId) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        let token = localStorage.getItem('admin');\r\n        const { companies } = this.state;\r\n        axios.delete(BaseUrl.url + '/api/AdministratorFacade/deletecompany/' + companyId, { headers: { 'Authorization': 'Bearer ' + token } })\r\n          .then(result => {\r\n            console.log(\"result.data.ID: \" + JSON.stringify(result))\r\n            if (result.status === 200) {\r\n              Swal.fire(\r\n                'Deleted!',\r\n                `Airline company with ID = ${result.data} deleted succsesfully`,\r\n                'success'\r\n              )\r\n            }\r\n            else {\r\n              Swal.fire({\r\n                icon: 'warning',\r\n                title: \"Oops..\",\r\n                type: \"error\",\r\n                text: result.data\r\n              });\r\n            }\r\n            this.setState({\r\n              response: result,\r\n              companies: companies.filter(company => company.ID !== companyId)\r\n            });\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { error, companies } = this.state;\r\n    if (error) {\r\n      return (\r\n        <div>Error:{error.message}</div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n          <Table className=\"tableFixHead tableViews\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>ID</Th>\r\n                <Th>Company Name</Th>\r\n                <Th>User Name</Th>\r\n                <Th>Password</Th>\r\n                <Th>Country Code</Th>\r\n                <Th>Country Name</Th>\r\n                <Th className=\"cActionW\">Action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {companies.map(company => (\r\n                <Tr key={company.ID}>\r\n                  <Td>{company.ID}</Td>\r\n                  <Td>{company.AIRLINE_NAME}</Td>\r\n                  <Td>{company.USER_NAME}</Td>\r\n                  <Td>{company.PASSWORD}</Td>\r\n                  <Td>{company.COUNTRY_CODE}</Td>\r\n                  <Td>{company.COUNTRY_NAME}</Td>\r\n                  <Td><Button id=\"editBtn\" variant=\"info\" style={{ borderRadius: 0 }} onClick={() => this.props.editCompany(company.ID)}>Edit</Button>  &nbsp;&nbsp;&nbsp;\r\n                          <Button id=\"deletBtn\" variant=\"danger\" style={{ borderRadius: 0 }} onClick={() => this.deleteCompany(company.ID)}>Delete</Button>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </Tbody>\r\n          </Table>\r\n      )\r\n    }\r\n  }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: bindActionCreators(logout, dispatch),\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(CompanyList);\r\n\r\n"]},"metadata":{},"sourceType":"module"}