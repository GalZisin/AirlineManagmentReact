{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\Administrator\\\\AdminPages\\\\AdminList.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport '../../TableList.css';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Swal from \"sweetalert2\";\nimport { history } from '../../../../history';\nimport { logout } from '../../../../actions/user.actions';\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\nimport '../../../../../node_modules/react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport { BaseUrl } from '../../../../constants/BaseUrl';\n\nclass AdminList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      administrators: [],\n      response: {}\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('admin');\n    const instance = axios.create({\n      baseURL: BaseUrl.url + '/api/AdministratorFacade',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    instance.post('/getAllAdministrators').then(result => {\n      this.setState({\n        administrators: result.data\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n\n      if (error.message === 'Request failed with status code 401') {\n        this.props.logout();\n        Swal.fire({\n          icon: 'warning',\n          title: \"Oops..\",\n          type: \"error\",\n          text: \"Your token expires, please re-login!\"\n        });\n        history.push('/');\n      }\n    });\n  }\n\n  deleteAdmin(adminId) {\n    let token = localStorage.getItem('admin');\n    const {\n      administrators\n    } = this.state;\n\n    if (administrators.length > 1) {\n      Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(result => {\n        if (result.value) {\n          axios.delete(BaseUrl.url + '/api/AdministratorFacade/deleteadmin/' + adminId, {\n            headers: {\n              'Authorization': 'Bearer ' + token\n            }\n          }).then(result => {\n            console.log(\"deleteadmin: \" + JSON.stringify(result));\n\n            if (result.data === `Administrator with ID = ${adminId} deleted succsesfully`) {\n              Swal.fire('Deleted!', result.data, 'success');\n            } else {\n              Swal.fire({\n                icon: 'warning',\n                title: \"Oops..\",\n                text: result.data\n              });\n            }\n\n            this.setState({\n              response: result,\n              administrators: administrators.filter(admin => admin.ID !== adminId)\n            });\n          });\n        }\n      });\n    } else {\n      Swal.fire({\n        icon: 'warning',\n        title: \"Oops..\",\n        text: 'You are not allowed to delete the last admin!'\n      });\n    }\n  }\n\n  render() {\n    const {\n      error,\n      administrators\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Error:\", error.message);\n    } else {\n      return React.createElement(Table, {\n        className: \"tableFixHead tableViews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Thead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Tr, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"ID\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"User Name\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Th, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(Tbody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, administrators.map(admin => React.createElement(Tr, {\n        key: admin.ID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, admin.ID), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, admin.FIRST_NAME), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, admin.LAST_NAME), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, admin.USER_NAME), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, admin.PASSWORD), React.createElement(Td, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        style: {\n          borderRadius: 0\n        },\n        onClick: () => this.props.editAdmin(admin.ID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Edit\"), \"  \\xA0\\xA0\\xA0\", React.createElement(Button, {\n        variant: \"danger\",\n        style: {\n          borderRadius: 0\n        },\n        onClick: () => this.deleteAdmin(admin.ID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Delete\"))))));\n    }\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: bindActionCreators(logout, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(AdminList);","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/Administrator/AdminPages/AdminList.js"],"names":["React","Button","axios","bindActionCreators","connect","Swal","history","logout","Table","Thead","Tbody","Tr","Th","Td","BaseUrl","AdminList","Component","constructor","props","state","error","administrators","response","componentDidMount","token","localStorage","getItem","instance","create","baseURL","url","headers","post","then","result","setState","data","message","fire","icon","title","type","text","push","deleteAdmin","adminId","length","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","value","delete","console","log","JSON","stringify","filter","admin","ID","render","map","FIRST_NAME","LAST_NAME","USER_NAME","PASSWORD","borderRadius","editAdmin","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport '../../TableList.css'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport Swal from \"sweetalert2\";\r\nimport { history } from '../../../../history';\r\nimport { logout } from '../../../../actions/user.actions';\r\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table'\r\nimport '../../../../../node_modules/react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\nimport { BaseUrl } from '../../../../constants/BaseUrl';\r\n\r\nclass AdminList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      administrators: [],\r\n      response: {}\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    let token = localStorage.getItem('admin');\r\n\r\n    const instance = axios.create({\r\n      baseURL: BaseUrl.url + '/api/AdministratorFacade', headers: { 'Authorization': 'Bearer ' + token }\r\n    });\r\n\r\n    instance.post('/getAllAdministrators')\r\n\r\n      .then((result) => {\r\n\r\n        this.setState({\r\n          administrators: result.data\r\n        });\r\n      },\r\n        (error) => {\r\n          this.setState({ error });\r\n          if (error.message === 'Request failed with status code 401') {\r\n            this.props.logout();\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              type: \"error\",\r\n              text: \"Your token expires, please re-login!\",\r\n            });\r\n            history.push('/');\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  deleteAdmin(adminId) {\r\n    let token = localStorage.getItem('admin');\r\n    const { administrators } = this.state;\r\n    if (administrators.length > 1) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          axios.delete(BaseUrl.url + '/api/AdministratorFacade/deleteadmin/' + adminId, { headers: { 'Authorization': 'Bearer ' + token } })\r\n            .then(result => {\r\n              console.log(\"deleteadmin: \" + JSON.stringify(result))\r\n              if (result.data === `Administrator with ID = ${adminId} deleted succsesfully`) {\r\n                Swal.fire(\r\n                  'Deleted!',\r\n                  result.data,\r\n                  'success'\r\n                )\r\n              }\r\n              else {\r\n                Swal.fire({\r\n                  icon: 'warning',\r\n                  title: \"Oops..\",\r\n                  text: result.data\r\n                });\r\n              }\r\n              this.setState({\r\n                response: result,\r\n                administrators: administrators.filter(admin => admin.ID !== adminId)\r\n              });\r\n            });\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      Swal.fire({\r\n        icon: 'warning',\r\n        title: \"Oops..\",\r\n        text: 'You are not allowed to delete the last admin!'\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { error, administrators } = this.state;\r\n    if (error) {\r\n      return (\r\n        <div>Error:{error.message}</div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n\r\n        <Table className=\"tableFixHead tableViews\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>ID</Th>\r\n              <Th>First Name</Th>\r\n              <Th>Last Name</Th>\r\n              <Th>User Name</Th>\r\n              <Th>Password</Th>\r\n              <Th>Action</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {administrators.map(admin => (\r\n              <Tr key={admin.ID}>\r\n                <Td >{admin.ID}</Td>\r\n                <Td>{admin.FIRST_NAME}</Td>\r\n                <Td>{admin.LAST_NAME}</Td>\r\n                <Td>{admin.USER_NAME}</Td>\r\n                <Td>{admin.PASSWORD}</Td>\r\n                <Td><Button variant=\"info\" style={{ borderRadius: 0 }} onClick={() => this.props.editAdmin(admin.ID)}>Edit</Button>  &nbsp;&nbsp;&nbsp;\r\n                          <Button variant=\"danger\" style={{ borderRadius: 0 }} onClick={() => this.deleteAdmin(admin.ID)}>Delete</Button>\r\n\r\n                </Td>\r\n              </Tr>\r\n            ))}\r\n          </Tbody>\r\n        </Table>\r\n\r\n      )\r\n    }\r\n  }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: bindActionCreators(logout, dispatch),\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(AdminList);\r\n"]},"metadata":{},"sourceType":"module"}