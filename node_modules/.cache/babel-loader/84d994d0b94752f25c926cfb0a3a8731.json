{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\CustomerAccount\\\\customerPages\\\\ActionOnTicket.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport TicketDetails from './TicketDetails';\nimport EditTicket from './EditTicket';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Swal from \"sweetalert2\";\nimport { history } from '../../../../history';\nimport { logout } from '../../../../actions/user.actions';\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BaseUrl } from '../../../../constants/BaseUrl';\n\nclass ActionsOnTicket extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editTicket = ticketId => {\n      let token = localStorage.getItem('customer');\n      axios.get(BaseUrl.url + '/api/CustomerFacade/getTicketByTicketId/' + ticketId, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        this.setState({\n          isEditTicket: true,\n          ticketData: result.data\n        });\n        console.log(\"Ticket Data: \" + JSON.stringify(this.state.ticketData));\n      }, error => {\n        this.setState({\n          error\n        });\n\n        if (error.message === 'Request failed with status code 401') {\n          this.props.logout();\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            type: \"error\",\n            text: \"Your token expires, please re-login!\"\n          });\n          history.push('/');\n        }\n      });\n    };\n\n    this.state = {\n      error: null,\n      response: {},\n      ticketData: {},\n      isEditTicket: false\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onFormSubmit(data) {\n    console.log(\"ticket data :\" + JSON.stringify(data));\n    let token = localStorage.getItem('customer');\n    axios.put(BaseUrl.url + '/api/CustomerFacade/updateticket', data, {\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(result => {\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        title: result.data,\n        showConfirmButton: true\n      });\n      this.setState({\n        response: result,\n        isEditTicket: false\n      });\n    });\n  }\n\n  onDetails(view) {\n    if (view === 'ListView') this.setState({\n      isEditTicket: false\n    });\n  }\n\n  render() {\n    console.log(\"isEditTicket: \" + this.state.isEditTicket);\n    let ticketForm;\n\n    if (this.state.isEditTicket) {\n      ticketForm = React.createElement(EditTicket, {\n        onFormSubmit: this.onFormSubmit,\n        ticket: this.state.ticketData,\n        ListView: this.onDetails.bind(this, 'ListView'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Your Ticket Details\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), !this.state.isEditTicket && React.createElement(TicketDetails, {\n      editTicket: this.editTicket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), ticketForm));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: bindActionCreators(logout, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ActionsOnTicket);","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/CustomerAccount/customerPages/ActionOnTicket.js"],"names":["React","Component","Container","TicketDetails","EditTicket","axios","bindActionCreators","connect","Swal","history","logout","BaseUrl","ActionsOnTicket","constructor","props","editTicket","ticketId","token","localStorage","getItem","get","url","headers","then","result","setState","isEditTicket","ticketData","data","console","log","JSON","stringify","state","error","message","fire","icon","title","type","text","push","response","onFormSubmit","bind","put","position","showConfirmButton","onDetails","view","render","ticketForm","textAlign","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport TicketDetails from './TicketDetails'\r\nimport EditTicket from './EditTicket';\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport Swal from \"sweetalert2\";\r\nimport { history } from '../../../../history';\r\nimport { logout } from '../../../../actions/user.actions';\r\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { BaseUrl } from '../../../../constants/BaseUrl'\r\n\r\nclass ActionsOnTicket extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n            response: {},\r\n            ticketData: {},\r\n            isEditTicket: false,\r\n        }\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    }\r\n\r\n    onFormSubmit(data) {\r\n        console.log(\"ticket data :\" + JSON.stringify(data))\r\n        let token = localStorage.getItem('customer');\r\n        axios.put(BaseUrl.url + '/api/CustomerFacade/updateticket', data, { headers: { 'Authorization': 'Bearer ' + token } })\r\n        .then(result => {\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'success',\r\n                title: result.data,\r\n                showConfirmButton: true\r\n              });\r\n            this.setState({\r\n                response: result,\r\n                isEditTicket: false\r\n            })\r\n        });\r\n    }\r\n\r\n    editTicket = ticketId => {\r\n\r\n        let token = localStorage.getItem('customer');\r\n        axios.get(BaseUrl.url + '/api/CustomerFacade/getTicketByTicketId/' + ticketId, { headers: { 'Authorization': 'Bearer ' + token } })\r\n            .then((result) => {\r\n                this.setState({\r\n                    isEditTicket: true,\r\n                    ticketData: result.data\r\n                });\r\n                console.log(\"Ticket Data: \" + JSON.stringify(this.state.ticketData))\r\n            },\r\n                (error) => {\r\n                    this.setState({ error });\r\n                    if (error.message === 'Request failed with status code 401') {\r\n                        this.props.logout();\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            title: \"Oops..\",\r\n                            type: \"error\",\r\n                            text: \"Your token expires, please re-login!\",\r\n                        });\r\n                        history.push('/');\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    onDetails(view) {\r\n        if (view === 'ListView')\r\n            this.setState({ isEditTicket: false });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"isEditTicket: \" + this.state.isEditTicket)\r\n        let ticketForm;\r\n        if (this.state.isEditTicket) {\r\n\r\n            ticketForm = <EditTicket onFormSubmit={this.onFormSubmit} ticket={this.state.ticketData} ListView={this.onDetails.bind(this, 'ListView')} />\r\n\r\n        }\r\n        return (\r\n            <div className=\"content1\">\r\n                <Container>\r\n                    <h1 style={{ textAlign: 'center' }}>Your Ticket Details</h1>\r\n                    <hr></hr>\r\n                    <br></br>\r\n                    {!this.state.isEditTicket && <TicketDetails editTicket={this.editTicket} />}\r\n                    {ticketForm}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: bindActionCreators(logout, dispatch),\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(ActionsOnTicket);\r\n"]},"metadata":{},"sourceType":"module"}