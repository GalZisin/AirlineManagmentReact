{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\Administrator\\\\AdminPages\\\\ActionsOnCompanies.js\";\nimport React, { Component } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport CompanyList from './CompanyList';\nimport AddCompany from './AddCompany';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Swal from \"sweetalert2\";\nimport { history } from '../../../../history';\nimport { logout } from '../../../../actions/user.actions';\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BaseUrl } from '../../../../constants/BaseUrl';\n\nclass ActionsOnCompanies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editCompany = companyId => {\n      let token = localStorage.getItem('admin');\n      axios.post(BaseUrl.url + `/api/AdministratorFacade/getAirlineCompanyById`, {\n        id: companyId\n      }, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        this.setState({\n          isEditCompany: true,\n          isAddCompany: false,\n          companyData: result.data\n        });\n      }, error => {\n        this.setState({\n          error\n        });\n\n        if (error.message === 'Request failed with status code 401') {\n          this.props.logout();\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            type: \"error\",\n            text: \"Your token expires, please re-login!\"\n          });\n          history.push('/');\n        }\n      });\n    };\n\n    this.state = {\n      isAddCompany: true,\n      error: null,\n      response: {},\n      companyData: {},\n      isEditCompany: false,\n      countriesData: []\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAllcountries();\n  }\n\n  getAllcountries() {\n    let token = localStorage.getItem('admin');\n    axios.get(BaseUrl.url + '/api/AdministratorFacade/getAllCountries/', {\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(result => {\n      this.setState({\n        countriesData: result.data\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  onFormSubmit(data) {\n    let token = localStorage.getItem('admin');\n\n    if (this.state.isEditCompany) {\n      axios.put(BaseUrl.url + '/api/AdministratorFacade/updateairlinecompany', data, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        console.log(\"updatecomapny: \" + JSON.stringify(result));\n        let adata = JSON.parse(result.config.data);\n\n        if (result.data === `Airline Company with ID = ${adata.ID} updated succsesfully`) {\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: result.data,\n            showConfirmButton: true\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            text: result.data\n          });\n        }\n\n        this.setState({\n          response: result,\n          isAddCompany: true,\n          isEditCompany: false\n        });\n      });\n    } else {\n      axios.post(BaseUrl.url + '/api/AdministratorFacade/createairlinecompany', data, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        if (result.data === 'AirlineCompany account created succsesfully') {\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: result.data,\n            showConfirmButton: true\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            type: \"error\",\n            text: result.data\n          });\n        }\n\n        this.setState({\n          response: result,\n          isAddCompany: true,\n          isEditCompany: false\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  onCreate() {\n    this.setState({\n      isAddCompany: false\n    });\n    this.setState({\n      isEditCompany: false\n    });\n    this.setState({\n      companyData: {}\n    });\n  }\n\n  onDetails(view) {\n    if (view === 'ListView') this.setState({\n      isAddCompany: true\n    });\n    this.setState({\n      isEditCompany: false\n    });\n  }\n\n  render() {\n    let companyForm;\n\n    if (!this.state.isAddCompany || this.state.isEditCompany) {\n      companyForm = React.createElement(AddCompany, {\n        onFormSubmit: this.onFormSubmit,\n        company: this.state.companyData,\n        countries: this.state.countriesData,\n        ListView: this.onDetails.bind(this, 'ListView'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content1\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"CRUD operation on companies\"), this.state.isAddCompany && React.createElement(Button, {\n      className: \"addBtn\",\n      variant: \"primary\",\n      style: {\n        borderRadius: 0\n      },\n      onClick: () => this.onCreate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Add Company\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), this.state.isAddCompany && React.createElement(CompanyList, {\n      editCompany: this.editCompany,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), companyForm));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: bindActionCreators(logout, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ActionsOnCompanies);","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/Administrator/AdminPages/ActionsOnCompanies.js"],"names":["React","Component","Container","Button","CompanyList","AddCompany","axios","bindActionCreators","connect","Swal","history","logout","BaseUrl","ActionsOnCompanies","constructor","props","editCompany","companyId","token","localStorage","getItem","post","url","id","headers","then","result","setState","isEditCompany","isAddCompany","companyData","data","error","message","fire","icon","title","type","text","push","state","response","countriesData","onFormSubmit","bind","componentDidMount","getAllcountries","get","put","console","log","JSON","stringify","adata","parse","config","ID","position","showConfirmButton","catch","onCreate","onDetails","view","render","companyForm","width","textAlign","borderRadius","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport CompanyList from './CompanyList'\r\nimport AddCompany from './AddCompany';\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport Swal from \"sweetalert2\";\r\nimport { history } from '../../../../history';\r\nimport { logout } from '../../../../actions/user.actions';\r\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { BaseUrl } from '../../../../constants/BaseUrl'\r\n\r\nclass ActionsOnCompanies extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isAddCompany: true,\r\n      error: null,\r\n      response: {},\r\n      companyData: {},\r\n      isEditCompany: false,\r\n      countriesData: []\r\n    }\r\n\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n\r\n  }\r\n  componentDidMount() {\r\n    this.getAllcountries();\r\n  }\r\n  getAllcountries() {\r\n    let token = localStorage.getItem('admin');\r\n    axios.get(BaseUrl.url + '/api/AdministratorFacade/getAllCountries/', { headers: { 'Authorization': 'Bearer ' + token } })\r\n      .then((result) => {\r\n        this.setState({\r\n\r\n          countriesData: result.data\r\n\r\n        });\r\n\r\n      },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      )\r\n  }\r\n  onFormSubmit(data) {\r\n    let token = localStorage.getItem('admin');\r\n    if (this.state.isEditCompany) {\r\n      axios.put(BaseUrl.url + '/api/AdministratorFacade/updateairlinecompany', data, { headers: { 'Authorization': 'Bearer ' + token } })\r\n        .then(result => {\r\n          console.log(\"updatecomapny: \" + JSON.stringify(result))\r\n          let adata = JSON.parse(result.config.data)\r\n          if(result.data === `Airline Company with ID = ${adata.ID} updated succsesfully`){\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: result.data,\r\n              showConfirmButton: true\r\n            });\r\n          }\r\n          else{\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              text: result.data\r\n            });\r\n          }    \r\n          this.setState({\r\n            response: result,\r\n            isAddCompany: true,\r\n            isEditCompany: false\r\n          })\r\n        });\r\n    } else {\r\n      axios.post(BaseUrl.url + '/api/AdministratorFacade/createairlinecompany', data, { headers: { 'Authorization': 'Bearer ' + token } })\r\n        .then(result => {\r\n          if (result.data === 'AirlineCompany account created succsesfully') {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: result.data,\r\n              showConfirmButton: true\r\n            });\r\n          }\r\n          else {\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              type: \"error\",\r\n              text: result.data\r\n            });\r\n          }\r\n          this.setState({\r\n            response: result,\r\n            isAddCompany: true,\r\n            isEditCompany: false\r\n          })\r\n        }).catch(error => {\r\n          console.log(error)\r\n        })\r\n    }\r\n  }\r\n\r\n  editCompany = companyId => {\r\n\r\n    let token = localStorage.getItem('admin');\r\n    axios.post(BaseUrl.url + `/api/AdministratorFacade/getAirlineCompanyById`, { id: companyId }, { headers: { 'Authorization': 'Bearer ' + token } })\r\n      .then((result) => {\r\n        this.setState({\r\n          isEditCompany: true,\r\n          isAddCompany: false,\r\n          companyData: result.data\r\n        });\r\n\r\n      },\r\n        (error) => {\r\n          this.setState({ error });\r\n          if (error.message === 'Request failed with status code 401') {\r\n            this.props.logout();\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: \"Oops..\",\r\n              type: \"error\",\r\n              text: \"Your token expires, please re-login!\",\r\n            });\r\n            history.push('/');\r\n          }\r\n        }\r\n      )\r\n\r\n  }\r\n\r\n  onCreate() {\r\n    this.setState({ isAddCompany: false });\r\n    this.setState({ isEditCompany: false });\r\n    this.setState({ companyData: {} });\r\n  }\r\n  onDetails(view) {\r\n    if (view === 'ListView')\r\n      this.setState({ isAddCompany: true });\r\n    this.setState({ isEditCompany: false });\r\n  }\r\n\r\n  render() {\r\n\r\n    let companyForm;\r\n    if (!this.state.isAddCompany || this.state.isEditCompany) {\r\n\r\n      companyForm = <AddCompany onFormSubmit={this.onFormSubmit} company={this.state.companyData} countries={this.state.countriesData} ListView={this.onDetails.bind(this, 'ListView')} />\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"content1\" style={{width: '100%'}}>\r\n        <Container>\r\n          <h1 style={{ textAlign: 'center' }}>CRUD operation on companies</h1>\r\n          {/* <hr></hr> */}\r\n          {this.state.isAddCompany && <Button className=\"addBtn\" variant=\"primary\" style={{ borderRadius: 0 }} onClick={() => this.onCreate()}>Add Company</Button>}\r\n          <br></br>\r\n          {this.state.isAddCompany && <CompanyList editCompany={this.editCompany} />}\r\n          {companyForm}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: bindActionCreators(logout, dispatch),\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(ActionsOnCompanies);\r\n"]},"metadata":{},"sourceType":"module"}