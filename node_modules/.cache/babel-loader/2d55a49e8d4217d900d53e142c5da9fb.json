{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-flights\\\\src\\\\components\\\\pages\\\\CustomerAccount\\\\customerPages\\\\ActionOnCustomer.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport CustomerDetails from './CustomerDetails';\nimport EditCustomer from './EditCustomer';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Swal from \"sweetalert2\";\nimport { history } from '../../../../history';\nimport { logout } from '../../../../actions/user.actions';\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BaseUrl } from '../../../../constants/BaseUrl';\n\nclass ActionsOnCustomer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editCustomer = customerId => {\n      let token = localStorage.getItem('customer');\n      axios.get(BaseUrl.url + '/api/CustomerFacade/getCustomerByCustomerId/' + customerId, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(result => {\n        this.setState({\n          isEditCustomer: true,\n          // isAddCompany: false,\n          customerData: result.data\n        });\n      }, error => {\n        this.setState({\n          error\n        });\n\n        if (error.message === 'Request failed with status code 401') {\n          this.props.logout();\n          Swal.fire({\n            icon: 'warning',\n            title: \"Oops..\",\n            type: \"error\",\n            text: \"Your token expires, please re-login!\"\n          });\n          history.push('/');\n        }\n      });\n    };\n\n    this.state = {\n      error: null,\n      response: {},\n      customerData: {},\n      isEditCustomer: false\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onFormSubmit(data) {\n    let token = localStorage.getItem('customer');\n    axios.put(BaseUrl.url + '/api/CustomerFacade/updateCustomer', data, {\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(result => {\n      console.log(\"result: \" + JSON.stringify(result));\n      let cdata = JSON.parse(result.config.data); // alert(`Customer with ID = ${cdata.ID} updated succsesfully`)\n\n      if (cdata.ID === data.ID) {\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: `Customer with ID = ${cdata.ID} updated succsesfully`,\n          showConfirmButton: true\n        });\n      } else {\n        Swal.fire({\n          icon: 'warning',\n          title: \"Oops..\",\n          text: result.data\n        });\n      }\n\n      this.setState({\n        response: result,\n        isAddAdmin: true,\n        isEditAdmin: false\n      });\n      localStorage.setItem('customer', result.data);\n      this.setState({\n        response: result,\n        isEditCustomer: false\n      });\n    });\n  }\n\n  onDetails(view) {\n    if (view === 'ListView') this.setState({\n      isEditCustomer: false\n    });\n  }\n\n  render() {\n    console.log(\"isEditCustomer: \" + this.state.isEditCustomer);\n    let customerForm;\n\n    if (this.state.isEditCustomer) {\n      customerForm = React.createElement(EditCustomer, {\n        onFormSubmit: this.onFormSubmit,\n        customer: this.state.customerData,\n        ListView: this.onDetails.bind(this, 'ListView'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"content1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Your Account Details\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), !this.state.isEditCustomer && React.createElement(CustomerDetails, {\n      editCustomer: this.editCustomer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), customerForm));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: bindActionCreators(logout, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ActionsOnCustomer);","map":{"version":3,"sources":["C:/Projects/react-flights/src/components/pages/CustomerAccount/customerPages/ActionOnCustomer.js"],"names":["React","Component","Container","CustomerDetails","EditCustomer","axios","bindActionCreators","connect","Swal","history","logout","BaseUrl","ActionsOnCustomer","constructor","props","editCustomer","customerId","token","localStorage","getItem","get","url","headers","then","result","setState","isEditCustomer","customerData","data","error","message","fire","icon","title","type","text","push","state","response","onFormSubmit","bind","put","console","log","JSON","stringify","cdata","parse","config","ID","position","showConfirmButton","isAddAdmin","isEditAdmin","setItem","onDetails","view","render","customerForm","textAlign","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport CustomerDetails from './CustomerDetails'\r\nimport EditCustomer from './EditCustomer';\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport Swal from \"sweetalert2\";\r\nimport { history } from '../../../../history';\r\nimport { logout } from '../../../../actions/user.actions';\r\nimport '../../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { BaseUrl } from '../../../../constants/BaseUrl'\r\n\r\nclass ActionsOnCustomer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: null,\r\n            response: {},\r\n            customerData: {},\r\n            isEditCustomer: false\r\n        }\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    }\r\n\r\n    onFormSubmit(data) {\r\n\r\n        let token = localStorage.getItem('customer');\r\n        axios.put(BaseUrl.url + '/api/CustomerFacade/updateCustomer', data, { headers: { 'Authorization': 'Bearer ' + token } })\r\n            .then(result => {\r\n\r\n                console.log(\"result: \" + JSON.stringify(result))\r\n                let cdata = JSON.parse(result.config.data)\r\n                // alert(`Customer with ID = ${cdata.ID} updated succsesfully`)\r\n                if (cdata.ID === data.ID) {\r\n                    Swal.fire({\r\n                        position: 'center',\r\n                        icon: 'success',\r\n                        title: `Customer with ID = ${cdata.ID} updated succsesfully`,\r\n                        showConfirmButton: true\r\n                    });\r\n                }\r\n                else {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        title: \"Oops..\",\r\n                        text: result.data\r\n                    });\r\n                }\r\n                this.setState({\r\n                    response: result,\r\n                    isAddAdmin: true,\r\n                    isEditAdmin: false\r\n                })\r\n\r\n                localStorage.setItem('customer', result.data)\r\n                this.setState({\r\n                    response: result,\r\n                    isEditCustomer: false\r\n                })\r\n            });\r\n    }\r\n\r\n    editCustomer = customerId => {\r\n        let token = localStorage.getItem('customer');\r\n        axios.get(BaseUrl.url + '/api/CustomerFacade/getCustomerByCustomerId/' + customerId, { headers: { 'Authorization': 'Bearer ' + token } })\r\n            .then((result) => {\r\n                this.setState({\r\n                    isEditCustomer: true,\r\n                    // isAddCompany: false,\r\n                    customerData: result.data\r\n                });\r\n            },\r\n                (error) => {\r\n                    this.setState({ error });\r\n                    if (error.message === 'Request failed with status code 401') {\r\n                        this.props.logout();\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            title: \"Oops..\",\r\n                            type: \"error\",\r\n                            text: \"Your token expires, please re-login!\",\r\n                        });\r\n                        history.push('/');\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    onDetails(view) {\r\n        if (view === 'ListView')\r\n            this.setState({ isEditCustomer: false });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"isEditCustomer: \" + this.state.isEditCustomer)\r\n        let customerForm;\r\n        if (this.state.isEditCustomer) {\r\n\r\n            customerForm = <EditCustomer onFormSubmit={this.onFormSubmit} customer={this.state.customerData} ListView={this.onDetails.bind(this, 'ListView')} />\r\n\r\n        }\r\n        return (\r\n            <div className=\"content1\">\r\n                <Container>\r\n                    <h1 style={{ textAlign: 'center' }}>Your Account Details</h1>\r\n                    <hr></hr>\r\n                    <br></br>\r\n                    {!this.state.isEditCustomer && <CustomerDetails editCustomer={this.editCustomer} />}\r\n                    {customerForm}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: bindActionCreators(logout, dispatch),\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(ActionsOnCustomer);"]},"metadata":{},"sourceType":"module"}